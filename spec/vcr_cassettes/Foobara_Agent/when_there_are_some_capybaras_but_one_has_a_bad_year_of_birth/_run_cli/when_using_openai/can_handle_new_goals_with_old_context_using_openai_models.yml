---
http_interactions:
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"chatgpt-4o-latest","messages":[{"role":"system","content":"You
        are implementing an API for a command named Foobara::Agent::DetermineNextCommandNameAndInputs
        which has the following description:\n\nAccepts a goal and context of the
        work so far and returns the inputs for the next command to run to make progress
        towards accomplishing the goal.  \n\nHere is the inputs JSON schema for the
        data you will receive:\n\n{\"type\":\"object\",\"required\":[\"command_class_names\",\"context\",\"goal\"],\"properties\":{\"goal\":{\"type\":\"string\",\"description\":\"What
        do you want the agent to attempt to accomplish?\"},\"context\":{\"type\":\"object\",\"properties\":{\"command_log\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"command_name\",\"outcome\"],\"properties\":{\"command_name\":{\"type\":\"string\",\"description\":\"Name
        of the command that was run\"},\"inputs\":{\"type\":[\"object\",\"null\"],\"description\":\"Inputs
        to the command\"},\"outcome\":{\"type\":\"object\",\"required\":[\"success\"],\"properties\":{\"success\":{\"type\":\"boolean\",\"description\":\"Whether
        the command succeeded or not\"},\"result\":{\"description\":\"Result of the
        command\"},\"errors_hash\":{\"description\":\"Errors that occurred during
        the command\"}}}}},\"description\":\"Log of all commands run so far and their
        outcomes\"}},\"description\":\"Context of the progress towards the goal so
        far\"},\"command_class_names\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}}}\n\nHere
        is the result JSON schema:\n\n{\"type\":\"object\",\"required\":[\"command_name\"],\"properties\":{\"command_name\":{\"type\":\"string\"},\"inputs\":{\"type\":[\"object\",\"null\"]}}}\n\nYou
        will receive 1 message containing only JSON data according to the inputs JSON
        schema above\nand you will generate a JSON response that is a valid response
        according to the result JSON schema above.\n\nYou will reply with nothing
        more than the JSON you''ve generated so that the calling code\ncan successfully
        parse your answer.\n"},{"role":"user","content":"{\"goal\":\"There is a capybara
        with a bad year of birth. Can you find and fix the bad record? Thanks!\",\"context\":{\"command_log\":[{\"command_name\":\"Foobara::Agent::ListCommands\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":{\"user_provided_commands\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\"],\"agent_specific_commands\":[\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}}}]},\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}"}]}'
    headers:
      Content-Type:
      - application/json
      Authorization:
      - Bearer <SCRUBBED_OPENAI_API_KEY>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 30 May 2025 02:36:23 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - user-mocyfzfqtusxbnhm0zzkagsd
      Openai-Processing-Ms:
      - '346'
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '351'
      X-Ratelimit-Limit-Requests:
      - '500'
      X-Ratelimit-Limit-Tokens:
      - '30000'
      X-Ratelimit-Remaining-Requests:
      - '499'
      X-Ratelimit-Remaining-Tokens:
      - '29337'
      X-Ratelimit-Reset-Requests:
      - 120ms
      X-Ratelimit-Reset-Tokens:
      - 1.326s
      X-Request-Id:
      - req_4270af22870c3a999b34293d855dbade
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=uMJV1RBX7QkaDeG_plTBOMVNDdHfYGA1._1yRY7LCQ0-1748572583-1.0.1.1-wy9zthZYg38mQbGjr71x3wVm6pAZnY1L7xP2KED5kg7ZmAW7A2rQlmoszZtKD9WuthU8Dnl3UjY.i1SksSkyDjlh9xwpnX1yNyA4XW.YkHk;
        path=/; expires=Fri, 30-May-25 03:06:23 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=W7XubmAmknDYgCdiNKciEqFLeCZAA7qjuJKwLDW3aW0-1748572583231-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 947ad7f15dcb15c2-SJC
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-BcjtWYMFCQNkubgHMfU4qYVJouz9e",
          "object": "chat.completion",
          "created": 1748572582,
          "model": "chatgpt-4o-latest",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "{\"command_name\":\"Capybaras::FindAllCapybaras\",\"inputs\":null}",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 627,
            "completion_tokens": 20,
            "total_tokens": 647,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_afccf7958a"
        }
  recorded_at: Fri, 30 May 2025 02:36:23 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"chatgpt-4o-latest","messages":[{"role":"system","content":"You
        are implementing an API for a command named Foobara::Agent::DetermineNextCommandNameAndInputs
        which has the following description:\n\nAccepts a goal and context of the
        work so far and returns the inputs for the next command to run to make progress
        towards accomplishing the goal.  \n\nHere is the inputs JSON schema for the
        data you will receive:\n\n{\"type\":\"object\",\"required\":[\"command_class_names\",\"context\",\"goal\"],\"properties\":{\"goal\":{\"type\":\"string\",\"description\":\"What
        do you want the agent to attempt to accomplish?\"},\"context\":{\"type\":\"object\",\"properties\":{\"command_log\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"command_name\",\"outcome\"],\"properties\":{\"command_name\":{\"type\":\"string\",\"description\":\"Name
        of the command that was run\"},\"inputs\":{\"type\":[\"object\",\"null\"],\"description\":\"Inputs
        to the command\"},\"outcome\":{\"type\":\"object\",\"required\":[\"success\"],\"properties\":{\"success\":{\"type\":\"boolean\",\"description\":\"Whether
        the command succeeded or not\"},\"result\":{\"description\":\"Result of the
        command\"},\"errors_hash\":{\"description\":\"Errors that occurred during
        the command\"}}}}},\"description\":\"Log of all commands run so far and their
        outcomes\"}},\"description\":\"Context of the progress towards the goal so
        far\"},\"command_class_names\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}}}\n\nHere
        is the result JSON schema:\n\n{\"type\":\"object\",\"required\":[\"command_name\"],\"properties\":{\"command_name\":{\"type\":\"string\"},\"inputs\":{\"type\":[\"object\",\"null\"]}}}\n\nYou
        will receive 1 message containing only JSON data according to the inputs JSON
        schema above\nand you will generate a JSON response that is a valid response
        according to the result JSON schema above.\n\nYou will reply with nothing
        more than the JSON you''ve generated so that the calling code\ncan successfully
        parse your answer.\n"},{"role":"user","content":"{\"goal\":\"There is a capybara
        with a bad year of birth. Can you find and fix the bad record? Thanks!\",\"context\":{\"command_log\":[{\"command_name\":\"Foobara::Agent::ListCommands\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":{\"user_provided_commands\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\"],\"agent_specific_commands\":[\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}}},{\"command_name\":\"Capybaras::FindAllCapybaras\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":[{\"name\":\"Fumiko\",\"year_of_birth\":2020,\"id\":1},{\"name\":\"Barbara\",\"year_of_birth\":19,\"id\":2},{\"name\":\"Basil\",\"year_of_birth\":2021,\"id\":3}]}}]},\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}"}]}'
    headers:
      Content-Type:
      - application/json
      Authorization:
      - Bearer <SCRUBBED_OPENAI_API_KEY>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 30 May 2025 02:36:24 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - user-mocyfzfqtusxbnhm0zzkagsd
      Openai-Processing-Ms:
      - '631'
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '634'
      X-Ratelimit-Limit-Requests:
      - '500'
      X-Ratelimit-Limit-Tokens:
      - '30000'
      X-Ratelimit-Remaining-Requests:
      - '499'
      X-Ratelimit-Remaining-Tokens:
      - '29263'
      X-Ratelimit-Reset-Requests:
      - 120ms
      X-Ratelimit-Reset-Tokens:
      - 1.472s
      X-Request-Id:
      - req_a13caa3e4ffa6640240a27c6ff3b8821
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=g8oQKl0XQJ64gy.S.Wf2ZCEIDgDr4rElRvB23MSsPWY-1748572584-1.0.1.1-qCzNIwePOTtLdsa1fD2_6L_fur9tO53TIoosw8OAqV2.Ih6B8KVfad4GP5j4qx9xK9cMxNvunLh24mqDyygYFmSJYOIhi2F1.AQRXIg4JqI;
        path=/; expires=Fri, 30-May-25 03:06:24 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=uBPwN90oUSzKndyVMf4COknlJpOjBCuKMjTBY5eJz40-1748572584780-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 947ad7f86c28d438-SJC
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-BcjtY5njW41nRuCJ5q7iDsATTNlET",
          "object": "chat.completion",
          "created": 1748572584,
          "model": "chatgpt-4o-latest",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "{\n  \"command_name\": \"Capybaras::UpdateCapybara\",\n  \"inputs\": {\n    \"id\": 2,\n    \"year_of_birth\": 2019\n  }\n}",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 704,
            "completion_tokens": 42,
            "total_tokens": 746,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_afccf7958a"
        }
  recorded_at: Fri, 30 May 2025 02:36:24 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"chatgpt-4o-latest","messages":[{"role":"system","content":"You
        are implementing an API for a command named Foobara::Agent::DetermineNextCommandNameAndInputs
        which has the following description:\n\nAccepts a goal and context of the
        work so far and returns the inputs for the next command to run to make progress
        towards accomplishing the goal.  \n\nHere is the inputs JSON schema for the
        data you will receive:\n\n{\"type\":\"object\",\"required\":[\"command_class_names\",\"context\",\"goal\"],\"properties\":{\"goal\":{\"type\":\"string\",\"description\":\"What
        do you want the agent to attempt to accomplish?\"},\"context\":{\"type\":\"object\",\"properties\":{\"command_log\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"command_name\",\"outcome\"],\"properties\":{\"command_name\":{\"type\":\"string\",\"description\":\"Name
        of the command that was run\"},\"inputs\":{\"type\":[\"object\",\"null\"],\"description\":\"Inputs
        to the command\"},\"outcome\":{\"type\":\"object\",\"required\":[\"success\"],\"properties\":{\"success\":{\"type\":\"boolean\",\"description\":\"Whether
        the command succeeded or not\"},\"result\":{\"description\":\"Result of the
        command\"},\"errors_hash\":{\"description\":\"Errors that occurred during
        the command\"}}}}},\"description\":\"Log of all commands run so far and their
        outcomes\"}},\"description\":\"Context of the progress towards the goal so
        far\"},\"command_class_names\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}}}\n\nHere
        is the result JSON schema:\n\n{\"type\":\"object\",\"required\":[\"command_name\"],\"properties\":{\"command_name\":{\"type\":\"string\"},\"inputs\":{\"type\":[\"object\",\"null\"]}}}\n\nYou
        will receive 1 message containing only JSON data according to the inputs JSON
        schema above\nand you will generate a JSON response that is a valid response
        according to the result JSON schema above.\n\nYou will reply with nothing
        more than the JSON you''ve generated so that the calling code\ncan successfully
        parse your answer.\n"},{"role":"user","content":"{\"goal\":\"There is a capybara
        with a bad year of birth. Can you find and fix the bad record? Thanks!\",\"context\":{\"command_log\":[{\"command_name\":\"Foobara::Agent::ListCommands\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":{\"user_provided_commands\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\"],\"agent_specific_commands\":[\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}}},{\"command_name\":\"Capybaras::FindAllCapybaras\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":[{\"name\":\"Fumiko\",\"year_of_birth\":2020,\"id\":1},{\"name\":\"Barbara\",\"year_of_birth\":19,\"id\":2},{\"name\":\"Basil\",\"year_of_birth\":2021,\"id\":3}]}},{\"command_name\":\"Foobara::Agent::DetermineNextCommandNameAndInputs\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"chatgpt-4o-latest\",\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]},\"outcome\":{\"success\":true,\"result\":{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"year_of_birth\":2019}}}},{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"year_of_birth\":2019},\"outcome\":{\"success\":true,\"result\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}}}]},\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}"}]}'
    headers:
      Content-Type:
      - application/json
      Authorization:
      - Bearer <SCRUBBED_OPENAI_API_KEY>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 30 May 2025 02:36:25 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - user-mocyfzfqtusxbnhm0zzkagsd
      Openai-Processing-Ms:
      - '505'
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '509'
      X-Ratelimit-Limit-Requests:
      - '500'
      X-Ratelimit-Limit-Tokens:
      - '30000'
      X-Ratelimit-Remaining-Requests:
      - '499'
      X-Ratelimit-Remaining-Tokens:
      - '28809'
      X-Ratelimit-Reset-Requests:
      - 120ms
      X-Ratelimit-Reset-Tokens:
      - 2.381s
      X-Request-Id:
      - req_b07a6e34999955958e85e8057f63066a
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=oWwdni_y2F8G2iA5cTfycc3thq0edajIjEULl9YvobI-1748572585-1.0.1.1-AqSiJwZ..2c9aEg2k_X08Vu1z82Wkc24x7f78U1h9jRCz9CpXDYmDEHXdbaeTmSytOF81tOC40XzitHj1SJ5r07KORKAB9tSqAbrEeigCtQ;
        path=/; expires=Fri, 30-May-25 03:06:25 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=yaVt9KXvAcbcSvAhXICi1zigLXBZwe13dOR0a0GGv2o-1748572585636-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 947ad8006b9f35d6-SJC
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-BcjtZQghub70UJ1KoG80oJEJgS76b",
          "object": "chat.completion",
          "created": 1748572585,
          "model": "chatgpt-4o-latest",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "{\"command_name\":\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\",\"inputs\":null}",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 940,
            "completion_tokens": 25,
            "total_tokens": 965,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_afccf7958a"
        }
  recorded_at: Fri, 30 May 2025 02:36:25 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"chatgpt-4o-latest","messages":[{"role":"system","content":"You
        are implementing an API for a command named Foobara::Agent::CapybaraAgent::DetermineInputsForNextNotifyUserThatCurrentGoalHasBeenAccomplishedCommand
        which has the following description:\n\nAccepts a goal and context of the
        work so far and returns the inputs for the next NotifyUserThatCurrentGoalHasBeenAccomplished
        command to run to make progress towards accomplishing the goal.  \n\nHere
        is the inputs JSON schema for the data you will receive:\n\n{\"type\":\"object\",\"required\":[\"context\",\"goal\"],\"properties\":{\"goal\":{\"type\":\"string\",\"description\":\"What
        do you want the agent to attempt to accomplish?\"},\"context\":{\"type\":\"object\",\"properties\":{\"command_log\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"command_name\",\"outcome\"],\"properties\":{\"command_name\":{\"type\":\"string\",\"description\":\"Name
        of the command that was run\"},\"inputs\":{\"type\":[\"object\",\"null\"],\"description\":\"Inputs
        to the command\"},\"outcome\":{\"type\":\"object\",\"required\":[\"success\"],\"properties\":{\"success\":{\"type\":\"boolean\",\"description\":\"Whether
        the command succeeded or not\"},\"result\":{\"description\":\"Result of the
        command\"},\"errors_hash\":{\"description\":\"Errors that occurred during
        the command\"}}}}},\"description\":\"Log of all commands run so far and their
        outcomes\"}},\"description\":\"Context of the progress towards the goal so
        far\"}}}\n\nHere is the result JSON schema:\n\n{\"type\":\"object\",\"properties\":{\"message_to_user\":{\"type\":\"string\",\"description\":\"Optional
        message to the user\"},\"result_data\":{\"description\":\"The final result
        of the work if relevant/expected\"}}}\n\nYou will receive 1 message containing
        only JSON data according to the inputs JSON schema above\nand you will generate
        a JSON response that is a valid response according to the result JSON schema
        above.\n\nYou will reply with nothing more than the JSON you''ve generated
        so that the calling code\ncan successfully parse your answer.\n"},{"role":"user","content":"{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"context\":{\"command_log\":[{\"command_name\":\"Foobara::Agent::ListCommands\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":{\"user_provided_commands\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\"],\"agent_specific_commands\":[\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}}},{\"command_name\":\"Capybaras::FindAllCapybaras\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":[{\"name\":\"Fumiko\",\"year_of_birth\":2020,\"id\":1},{\"name\":\"Barbara\",\"year_of_birth\":19,\"id\":2},{\"name\":\"Basil\",\"year_of_birth\":2021,\"id\":3}]}},{\"command_name\":\"Foobara::Agent::DetermineNextCommandNameAndInputs\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"chatgpt-4o-latest\",\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]},\"outcome\":{\"success\":true,\"result\":{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"year_of_birth\":2019}}}},{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"year_of_birth\":2019},\"outcome\":{\"success\":true,\"result\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}}},{\"command_name\":\"Foobara::Agent::DetermineNextCommandNameAndInputs\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"chatgpt-4o-latest\",\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]},\"outcome\":{\"success\":false,\"errors_hash\":{\"data.cannot_cast\":{\"key\":\"data.cannot_cast\",\"path\":[],\"runtime_path\":[],\"category\":\"data\",\"symbol\":\"cannot_cast\",\"message\":\"Cannot
        cast nil to an attributes. Expected it to be a an array of pairs, or be a
        hash with symbolizable keys\",\"context\":{\"cast_to\":{\"type\":\"attributes\",\"element_type_declarations\":{\"message_to_user\":{\"description\":\"Optional
        message to the user\",\"type\":\"string\"},\"result_data\":{\"description\":\"The
        final result of the work if relevant/expected\",\"type\":\"duck\"}}},\"value\":null},\"is_fatal\":true}}}}]}}"}]}'
    headers:
      Content-Type:
      - application/json
      Authorization:
      - Bearer <SCRUBBED_OPENAI_API_KEY>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 30 May 2025 02:36:28 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - user-mocyfzfqtusxbnhm0zzkagsd
      Openai-Processing-Ms:
      - '1087'
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '1098'
      X-Ratelimit-Limit-Requests:
      - '500'
      X-Ratelimit-Limit-Tokens:
      - '30000'
      X-Ratelimit-Remaining-Requests:
      - '499'
      X-Ratelimit-Remaining-Tokens:
      - '28523'
      X-Ratelimit-Reset-Requests:
      - 120ms
      X-Ratelimit-Reset-Tokens:
      - 2.953s
      X-Request-Id:
      - req_56e1a511cfb93129d8ed663141576b4d
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=tye55yZrG3zwYvb9HaZCppPsDhgSbhD99eiqAeWv4UY-1748572588-1.0.1.1-GC8tPZ43.pI93cwK41RLCXJfjlz7tK2evz_qOyHgyt6yetdEiG3oJWoxW6hxeczGVVlO0A.VZXfq0z.gG5s2ZZnoMyLGZF5xu2h7VvXzTq8;
        path=/; expires=Fri, 30-May-25 03:06:28 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=uF0_fkyLEYbnVElmigdT7sAV33CYgxfxjLKkDykhbmM-1748572588009-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 947ad807eae5f9f5-SJC
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-BcjtaN8sWrKXW1wVZBDQOFyyLMgLZ",
          "object": "chat.completion",
          "created": 1748572586,
          "model": "chatgpt-4o-latest",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "{\n  \"message_to_user\": \"I found and fixed the capybara with the incorrect year of birth. Barbara's year of birth has been corrected from 19 to 2019.\",\n  \"result_data\": {\n    \"name\": \"Barbara\",\n    \"year_of_birth\": 2019,\n    \"id\": 2\n  }\n}",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 1142,
            "completion_tokens": 72,
            "total_tokens": 1214,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_afccf7958a"
        }
  recorded_at: Fri, 30 May 2025 02:36:28 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"chatgpt-4o-latest","messages":[{"role":"system","content":"You
        are implementing an API for a command named Foobara::Agent::DetermineNextCommandNameAndInputs
        which has the following description:\n\nAccepts a goal and context of the
        work so far and returns the inputs for the next command to run to make progress
        towards accomplishing the goal.  \n\nHere is the inputs JSON schema for the
        data you will receive:\n\n{\"type\":\"object\",\"required\":[\"command_class_names\",\"context\",\"goal\"],\"properties\":{\"goal\":{\"type\":\"string\",\"description\":\"What
        do you want the agent to attempt to accomplish?\"},\"context\":{\"type\":\"object\",\"properties\":{\"command_log\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"command_name\",\"outcome\"],\"properties\":{\"command_name\":{\"type\":\"string\",\"description\":\"Name
        of the command that was run\"},\"inputs\":{\"type\":[\"object\",\"null\"],\"description\":\"Inputs
        to the command\"},\"outcome\":{\"type\":\"object\",\"required\":[\"success\"],\"properties\":{\"success\":{\"type\":\"boolean\",\"description\":\"Whether
        the command succeeded or not\"},\"result\":{\"description\":\"Result of the
        command\"},\"errors_hash\":{\"description\":\"Errors that occurred during
        the command\"}}}}},\"description\":\"Log of all commands run so far and their
        outcomes\"}},\"description\":\"Context of the progress towards the goal so
        far\"},\"command_class_names\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}}}\n\nHere
        is the result JSON schema:\n\n{\"type\":\"object\",\"required\":[\"command_name\"],\"properties\":{\"command_name\":{\"type\":\"string\"},\"inputs\":{\"type\":[\"object\",\"null\"]}}}\n\nYou
        will receive 1 message containing only JSON data according to the inputs JSON
        schema above\nand you will generate a JSON response that is a valid response
        according to the result JSON schema above.\n\nYou will reply with nothing
        more than the JSON you''ve generated so that the calling code\ncan successfully
        parse your answer.\n"},{"role":"user","content":"{\"goal\":\"Thank you so
        much! Can you set it back so that I can do the demo over again? Thanks!\",\"context\":{\"command_log\":[{\"command_name\":\"Foobara::Agent::ListCommands\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":{\"user_provided_commands\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\"],\"agent_specific_commands\":[\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}}},{\"command_name\":\"Capybaras::FindAllCapybaras\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":[{\"name\":\"Fumiko\",\"year_of_birth\":2020,\"id\":1},{\"name\":\"Barbara\",\"year_of_birth\":19,\"id\":2},{\"name\":\"Basil\",\"year_of_birth\":2021,\"id\":3}]}},{\"command_name\":\"Foobara::Agent::DetermineNextCommandNameAndInputs\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"chatgpt-4o-latest\",\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]},\"outcome\":{\"success\":true,\"result\":{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"year_of_birth\":2019}}}},{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"year_of_birth\":2019},\"outcome\":{\"success\":true,\"result\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}}},{\"command_name\":\"Foobara::Agent::DetermineNextCommandNameAndInputs\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"chatgpt-4o-latest\",\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]},\"outcome\":{\"success\":false,\"errors_hash\":{\"data.cannot_cast\":{\"key\":\"data.cannot_cast\",\"path\":[],\"runtime_path\":[],\"category\":\"data\",\"symbol\":\"cannot_cast\",\"message\":\"Cannot
        cast nil to an attributes. Expected it to be a an array of pairs, or be a
        hash with symbolizable keys\",\"context\":{\"cast_to\":{\"type\":\"attributes\",\"element_type_declarations\":{\"message_to_user\":{\"description\":\"Optional
        message to the user\",\"type\":\"string\"},\"result_data\":{\"description\":\"The
        final result of the work if relevant/expected\",\"type\":\"duck\"}}},\"value\":null},\"is_fatal\":true}}}},{\"command_name\":\"Foobara::Agent::CapybaraAgent::DetermineInputsForNextNotifyUserThatCurrentGoalHasBeenAccomplishedCommand\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"chatgpt-4o-latest\"},\"outcome\":{\"success\":true,\"result\":{\"message_to_user\":\"I
        found and fixed the capybara with the incorrect year of birth. Barbara''s
        year of birth has been corrected from 19 to 2019.\",\"result_data\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}}}},{\"command_name\":\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\",\"inputs\":{\"message_to_user\":\"I
        found and fixed the capybara with the incorrect year of birth. Barbara''s
        year of birth has been corrected from 19 to 2019.\",\"result_data\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}},\"outcome\":{\"success\":true,\"result\":{\"message_to_user\":\"I
        found and fixed the capybara with the incorrect year of birth. Barbara''s
        year of birth has been corrected from 19 to 2019.\"}}}]},\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}"}]}'
    headers:
      Content-Type:
      - application/json
      Authorization:
      - Bearer <SCRUBBED_OPENAI_API_KEY>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 30 May 2025 02:36:28 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - user-mocyfzfqtusxbnhm0zzkagsd
      Openai-Processing-Ms:
      - '406'
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '409'
      X-Ratelimit-Limit-Requests:
      - '500'
      X-Ratelimit-Limit-Tokens:
      - '30000'
      X-Ratelimit-Remaining-Requests:
      - '499'
      X-Ratelimit-Remaining-Tokens:
      - '27930'
      X-Ratelimit-Reset-Requests:
      - 120ms
      X-Ratelimit-Reset-Tokens:
      - 4.138s
      X-Request-Id:
      - req_55691bdfa6b6cb0f21ca537fb2dc8c0c
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=EDly04fpjuUI4b3NL_X3L7glOzzTx7Hn01ZVL46IufY-1748572588-1.0.1.1-vSTehfaqQjMafNP0M3N963nMuX86Y48TlkyrIpbLjUwEJKBkRGLd6pC.sbnt4WEjAwDdA3xqAy9p0Bzq3BNciWsgqvVp.8Oo1frqtloEfFU;
        path=/; expires=Fri, 30-May-25 03:06:28 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=Yk0CcS0k0Yv_LRziQXmhkmpzTLhNbu1.IMOH3woP7Us-1748572588996-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 947ad8161d98a63b-SJC
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-BcjtcsLdXterKi2MJyxdq2Pg0NRCQ",
          "object": "chat.completion",
          "created": 1748572588,
          "model": "chatgpt-4o-latest",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"year_of_birth\":19}}",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 1474,
            "completion_tokens": 26,
            "total_tokens": 1500,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_afccf7958a"
        }
  recorded_at: Fri, 30 May 2025 02:36:29 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"chatgpt-4o-latest","messages":[{"role":"system","content":"You
        are implementing an API for a command named Foobara::Agent::DetermineNextCommandNameAndInputs
        which has the following description:\n\nAccepts a goal and context of the
        work so far and returns the inputs for the next command to run to make progress
        towards accomplishing the goal.  \n\nHere is the inputs JSON schema for the
        data you will receive:\n\n{\"type\":\"object\",\"required\":[\"command_class_names\",\"context\",\"goal\"],\"properties\":{\"goal\":{\"type\":\"string\",\"description\":\"What
        do you want the agent to attempt to accomplish?\"},\"context\":{\"type\":\"object\",\"properties\":{\"command_log\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"command_name\",\"outcome\"],\"properties\":{\"command_name\":{\"type\":\"string\",\"description\":\"Name
        of the command that was run\"},\"inputs\":{\"type\":[\"object\",\"null\"],\"description\":\"Inputs
        to the command\"},\"outcome\":{\"type\":\"object\",\"required\":[\"success\"],\"properties\":{\"success\":{\"type\":\"boolean\",\"description\":\"Whether
        the command succeeded or not\"},\"result\":{\"description\":\"Result of the
        command\"},\"errors_hash\":{\"description\":\"Errors that occurred during
        the command\"}}}}},\"description\":\"Log of all commands run so far and their
        outcomes\"}},\"description\":\"Context of the progress towards the goal so
        far\"},\"command_class_names\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}}}\n\nHere
        is the result JSON schema:\n\n{\"type\":\"object\",\"required\":[\"command_name\"],\"properties\":{\"command_name\":{\"type\":\"string\"},\"inputs\":{\"type\":[\"object\",\"null\"]}}}\n\nYou
        will receive 1 message containing only JSON data according to the inputs JSON
        schema above\nand you will generate a JSON response that is a valid response
        according to the result JSON schema above.\n\nYou will reply with nothing
        more than the JSON you''ve generated so that the calling code\ncan successfully
        parse your answer.\n"},{"role":"user","content":"{\"goal\":\"Thank you so
        much! Can you set it back so that I can do the demo over again? Thanks!\",\"context\":{\"command_log\":[{\"command_name\":\"Foobara::Agent::ListCommands\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":{\"user_provided_commands\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\"],\"agent_specific_commands\":[\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}}},{\"command_name\":\"Capybaras::FindAllCapybaras\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":[{\"name\":\"Fumiko\",\"year_of_birth\":2020,\"id\":1},{\"name\":\"Barbara\",\"year_of_birth\":19,\"id\":2},{\"name\":\"Basil\",\"year_of_birth\":2021,\"id\":3}]}},{\"command_name\":\"Foobara::Agent::DetermineNextCommandNameAndInputs\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"chatgpt-4o-latest\",\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]},\"outcome\":{\"success\":true,\"result\":{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"year_of_birth\":2019}}}},{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"year_of_birth\":2019},\"outcome\":{\"success\":true,\"result\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}}},{\"command_name\":\"Foobara::Agent::DetermineNextCommandNameAndInputs\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"chatgpt-4o-latest\",\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]},\"outcome\":{\"success\":false,\"errors_hash\":{\"data.cannot_cast\":{\"key\":\"data.cannot_cast\",\"path\":[],\"runtime_path\":[],\"category\":\"data\",\"symbol\":\"cannot_cast\",\"message\":\"Cannot
        cast nil to an attributes. Expected it to be a an array of pairs, or be a
        hash with symbolizable keys\",\"context\":{\"cast_to\":{\"type\":\"attributes\",\"element_type_declarations\":{\"message_to_user\":{\"description\":\"Optional
        message to the user\",\"type\":\"string\"},\"result_data\":{\"description\":\"The
        final result of the work if relevant/expected\",\"type\":\"duck\"}}},\"value\":null},\"is_fatal\":true}}}},{\"command_name\":\"Foobara::Agent::CapybaraAgent::DetermineInputsForNextNotifyUserThatCurrentGoalHasBeenAccomplishedCommand\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"chatgpt-4o-latest\"},\"outcome\":{\"success\":true,\"result\":{\"message_to_user\":\"I
        found and fixed the capybara with the incorrect year of birth. Barbara''s
        year of birth has been corrected from 19 to 2019.\",\"result_data\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}}}},{\"command_name\":\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\",\"inputs\":{\"message_to_user\":\"I
        found and fixed the capybara with the incorrect year of birth. Barbara''s
        year of birth has been corrected from 19 to 2019.\",\"result_data\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}},\"outcome\":{\"success\":true,\"result\":{\"message_to_user\":\"I
        found and fixed the capybara with the incorrect year of birth. Barbara''s
        year of birth has been corrected from 19 to 2019.\"}}},{\"command_name\":\"Foobara::Agent::DetermineNextCommandNameAndInputs\",\"inputs\":{\"goal\":\"Thank
        you so much! Can you set it back so that I can do the demo over again? Thanks!\",\"llm_model\":\"chatgpt-4o-latest\",\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]},\"outcome\":{\"success\":true,\"result\":{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"year_of_birth\":19}}}},{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"year_of_birth\":19},\"outcome\":{\"success\":true,\"result\":{\"name\":\"Barbara\",\"year_of_birth\":19,\"id\":2}}}]},\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}"}]}'
    headers:
      Content-Type:
      - application/json
      Authorization:
      - Bearer <SCRUBBED_OPENAI_API_KEY>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 30 May 2025 02:36:30 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - user-mocyfzfqtusxbnhm0zzkagsd
      Openai-Processing-Ms:
      - '989'
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '993'
      X-Ratelimit-Limit-Requests:
      - '500'
      X-Ratelimit-Limit-Tokens:
      - '30000'
      X-Ratelimit-Remaining-Requests:
      - '499'
      X-Ratelimit-Remaining-Tokens:
      - '26583'
      X-Ratelimit-Reset-Requests:
      - 120ms
      X-Ratelimit-Reset-Tokens:
      - 6.833s
      X-Request-Id:
      - req_1b356d331b1b916d1a49090f449cd5a1
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=GwZe.b_BzHgzpAFId9TXJz7M0vbPKFpXU1dzYf8CcIY-1748572590-1.0.1.1-M4K.VCLWZ2yJCwEt2U_eQ.dUFJWlJTzKGrkJ4AagR5yQggJyVkgokogreDXw2wWvTfIZqyibB1NWWhSyvkzQk.A1QC47BPvJhlSv4ZnKy9M;
        path=/; expires=Fri, 30-May-25 03:06:30 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=8ZyAVsBOdmXwAUajf6q0_OqW_15ivLQSCtLdUtoL6_A-1748572590437-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 947ad81b3dd36450-SJC
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-BcjtdhA2fAtwHinS9F00eAHJ1xMn2",
          "object": "chat.completion",
          "created": 1748572589,
          "model": "chatgpt-4o-latest",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "{\"command_name\":\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\",\"inputs\":{\"message_to_user\":\"The capybara record has been reset: Barbara's year of birth has been reverted from 2019 back to 19 so that you can rerun the demo.\",\"result_data\":{\"name\":\"Barbara\",\"year_of_birth\":19,\"id\":2}}}",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 1704,
            "completion_tokens": 79,
            "total_tokens": 1783,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_afccf7958a"
        }
  recorded_at: Fri, 30 May 2025 02:36:30 GMT
recorded_with: VCR 6.3.1
