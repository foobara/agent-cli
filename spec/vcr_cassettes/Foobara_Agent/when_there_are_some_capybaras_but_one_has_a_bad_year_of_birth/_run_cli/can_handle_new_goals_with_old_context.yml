---
http_interactions:
- request:
    method: post
    uri: https://api.anthropic.com/v1/messages
    body:
      encoding: UTF-8
      string: '{"model":"claude-3-7-sonnet-20250219","max_tokens":1024,"messages":[{"role":"user","content":"{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"context\":{\"command_log\":[{\"command_name\":\"Foobara::Agent::ListCommands\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":{\"user_provided_commands\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\"],\"agent_specific_commands\":[\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}}}]},\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}"}],"system":"You
        are implementing an API for a command named Foobara::Agent::DetermineNextCommandNameAndInputs
        which has the following description:\n\nAccepts a goal and context of the
        work so far and returns the inputs for the next command to run to make progress
        towards accomplishing the goal.  \n\nHere is the inputs JSON schema for the
        data you will receive:\n\n{\"type\":\"object\",\"required\":[\"command_class_names\",\"context\",\"goal\"],\"properties\":{\"goal\":{\"type\":\"string\",\"description\":\"What
        do you want the agent to attempt to accomplish?\"},\"context\":{\"type\":\"object\",\"properties\":{\"command_log\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"command_name\",\"outcome\"],\"properties\":{\"command_name\":{\"type\":\"string\",\"description\":\"Name
        of the command that was run\"},\"inputs\":{\"type\":[\"object\",\"null\"],\"description\":\"Inputs
        to the command\"},\"outcome\":{\"type\":\"object\",\"required\":[\"success\"],\"properties\":{\"success\":{\"type\":\"boolean\",\"description\":\"Whether
        the command succeeded or not\"},\"result\":{\"description\":\"Result of the
        command\"},\"errors_hash\":{\"description\":\"Errors that occurred during
        the command\"}}}}},\"description\":\"Log of all commands run so far and their
        outcomes\"}},\"description\":\"Context of the progress towards the goal so
        far\"},\"command_class_names\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}}}\n\nHere
        is the result JSON schema:\n\n{\"type\":\"object\",\"required\":[\"command_name\"],\"properties\":{\"command_name\":{\"type\":\"string\"},\"inputs\":{\"type\":[\"object\",\"null\"]}}}\n\nYou
        will receive 1 message containing only JSON data according to the inputs JSON
        schema above\nand you will generate a JSON response that is a valid response
        according to the result JSON schema above.\n\nYou will reply with nothing
        more than the JSON you''ve generated so that the calling code\ncan successfully
        parse your answer.\n"}'
    headers:
      Content-Type:
      - application/json
      X-Api-Key:
      - "<SCRUBBED_ANTHROPIC_API_KEY>"
      Anthropic-Version:
      - '2023-06-01'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 27 May 2025 23:35:46 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Anthropic-Ratelimit-Input-Tokens-Limit:
      - '40000'
      Anthropic-Ratelimit-Input-Tokens-Remaining:
      - '40000'
      Anthropic-Ratelimit-Input-Tokens-Reset:
      - '2025-05-27T23:35:46Z'
      Anthropic-Ratelimit-Output-Tokens-Limit:
      - '16000'
      Anthropic-Ratelimit-Output-Tokens-Remaining:
      - '16000'
      Anthropic-Ratelimit-Output-Tokens-Reset:
      - '2025-05-27T23:35:46Z'
      Anthropic-Ratelimit-Requests-Limit:
      - '1000'
      Anthropic-Ratelimit-Requests-Remaining:
      - '999'
      Anthropic-Ratelimit-Requests-Reset:
      - '2025-05-27T23:35:45Z'
      Anthropic-Ratelimit-Tokens-Limit:
      - '56000'
      Anthropic-Ratelimit-Tokens-Remaining:
      - '56000'
      Anthropic-Ratelimit-Tokens-Reset:
      - '2025-05-27T23:35:46Z'
      Request-Id:
      - req_011CPYusGoS4nBXcUEhf8ctx
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Anthropic-Organization-Id:
      - 7a8e3751-3b70-4f90-a3ce-07f57c9d0bfc
      Via:
      - 1.1 google
      Cf-Cache-Status:
      - DYNAMIC
      X-Robots-Tag:
      - none
      Server:
      - cloudflare
      Cf-Ray:
      - 94695499a890eb25-SJC
    body:
      encoding: ASCII-8BIT
      string: '{"id":"msg_018pj9NHUVrwsf9Y8w9PQFes","type":"message","role":"assistant","model":"claude-3-7-sonnet-20250219","content":[{"type":"text","text":"{\"command_name\":\"Capybaras::FindAllCapybaras\",\"inputs\":null}"}],"stop_reason":"end_turn","stop_sequence":null,"usage":{"input_tokens":729,"cache_creation_input_tokens":0,"cache_read_input_tokens":0,"output_tokens":25,"service_tier":"standard"}}'
  recorded_at: Tue, 27 May 2025 23:35:46 GMT
- request:
    method: post
    uri: https://api.anthropic.com/v1/messages
    body:
      encoding: UTF-8
      string: '{"model":"claude-3-7-sonnet-20250219","max_tokens":1024,"messages":[{"role":"user","content":"{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"context\":{\"command_log\":[{\"command_name\":\"Foobara::Agent::ListCommands\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":{\"user_provided_commands\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\"],\"agent_specific_commands\":[\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}}},{\"command_name\":\"Capybaras::FindAllCapybaras\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":[{\"name\":\"Fumiko\",\"year_of_birth\":2020,\"id\":1},{\"name\":\"Barbara\",\"year_of_birth\":19,\"id\":2},{\"name\":\"Basil\",\"year_of_birth\":2021,\"id\":3}]}}]},\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}"}],"system":"You
        are implementing an API for a command named Foobara::Agent::DetermineNextCommandNameAndInputs
        which has the following description:\n\nAccepts a goal and context of the
        work so far and returns the inputs for the next command to run to make progress
        towards accomplishing the goal.  \n\nHere is the inputs JSON schema for the
        data you will receive:\n\n{\"type\":\"object\",\"required\":[\"command_class_names\",\"context\",\"goal\"],\"properties\":{\"goal\":{\"type\":\"string\",\"description\":\"What
        do you want the agent to attempt to accomplish?\"},\"context\":{\"type\":\"object\",\"properties\":{\"command_log\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"command_name\",\"outcome\"],\"properties\":{\"command_name\":{\"type\":\"string\",\"description\":\"Name
        of the command that was run\"},\"inputs\":{\"type\":[\"object\",\"null\"],\"description\":\"Inputs
        to the command\"},\"outcome\":{\"type\":\"object\",\"required\":[\"success\"],\"properties\":{\"success\":{\"type\":\"boolean\",\"description\":\"Whether
        the command succeeded or not\"},\"result\":{\"description\":\"Result of the
        command\"},\"errors_hash\":{\"description\":\"Errors that occurred during
        the command\"}}}}},\"description\":\"Log of all commands run so far and their
        outcomes\"}},\"description\":\"Context of the progress towards the goal so
        far\"},\"command_class_names\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}}}\n\nHere
        is the result JSON schema:\n\n{\"type\":\"object\",\"required\":[\"command_name\"],\"properties\":{\"command_name\":{\"type\":\"string\"},\"inputs\":{\"type\":[\"object\",\"null\"]}}}\n\nYou
        will receive 1 message containing only JSON data according to the inputs JSON
        schema above\nand you will generate a JSON response that is a valid response
        according to the result JSON schema above.\n\nYou will reply with nothing
        more than the JSON you''ve generated so that the calling code\ncan successfully
        parse your answer.\n"}'
    headers:
      Content-Type:
      - application/json
      X-Api-Key:
      - "<SCRUBBED_ANTHROPIC_API_KEY>"
      Anthropic-Version:
      - '2023-06-01'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 27 May 2025 23:35:48 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Anthropic-Ratelimit-Input-Tokens-Limit:
      - '40000'
      Anthropic-Ratelimit-Input-Tokens-Remaining:
      - '39000'
      Anthropic-Ratelimit-Input-Tokens-Reset:
      - '2025-05-27T23:35:48Z'
      Anthropic-Ratelimit-Output-Tokens-Limit:
      - '16000'
      Anthropic-Ratelimit-Output-Tokens-Remaining:
      - '16000'
      Anthropic-Ratelimit-Output-Tokens-Reset:
      - '2025-05-27T23:35:48Z'
      Anthropic-Ratelimit-Requests-Limit:
      - '1000'
      Anthropic-Ratelimit-Requests-Remaining:
      - '999'
      Anthropic-Ratelimit-Requests-Reset:
      - '2025-05-27T23:35:47Z'
      Anthropic-Ratelimit-Tokens-Limit:
      - '56000'
      Anthropic-Ratelimit-Tokens-Remaining:
      - '55000'
      Anthropic-Ratelimit-Tokens-Reset:
      - '2025-05-27T23:35:48Z'
      Request-Id:
      - req_011CPYusRZY1MENeFeVEJfjC
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Anthropic-Organization-Id:
      - 7a8e3751-3b70-4f90-a3ce-07f57c9d0bfc
      Via:
      - 1.1 google
      Cf-Cache-Status:
      - DYNAMIC
      X-Robots-Tag:
      - none
      Server:
      - cloudflare
      Cf-Ray:
      - 946954a66ed98075-SJC
    body:
      encoding: ASCII-8BIT
      string: '{"id":"msg_01JeAFPbKH5wrzRKcj5rZh6C","type":"message","role":"assistant","model":"claude-3-7-sonnet-20250219","content":[{"type":"text","text":"{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"year_of_birth\":2019}}"}],"stop_reason":"end_turn","stop_sequence":null,"usage":{"input_tokens":820,"cache_creation_input_tokens":0,"cache_read_input_tokens":0,"output_tokens":35,"service_tier":"standard"}}'
  recorded_at: Tue, 27 May 2025 23:35:48 GMT
- request:
    method: post
    uri: https://api.anthropic.com/v1/messages
    body:
      encoding: UTF-8
      string: '{"model":"claude-3-7-sonnet-20250219","max_tokens":1024,"messages":[{"role":"user","content":"{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"context\":{\"command_log\":[{\"command_name\":\"Foobara::Agent::ListCommands\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":{\"user_provided_commands\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\"],\"agent_specific_commands\":[\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}}},{\"command_name\":\"Capybaras::FindAllCapybaras\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":[{\"name\":\"Fumiko\",\"year_of_birth\":2020,\"id\":1},{\"name\":\"Barbara\",\"year_of_birth\":19,\"id\":2},{\"name\":\"Basil\",\"year_of_birth\":2021,\"id\":3}]}},{\"command_name\":\"Foobara::Agent::DetermineNextCommandNameAndInputs\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\",\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]},\"outcome\":{\"success\":true,\"result\":{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"year_of_birth\":2019}}}},{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"year_of_birth\":2019},\"outcome\":{\"success\":true,\"result\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}}}]},\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}"}],"system":"You
        are implementing an API for a command named Foobara::Agent::DetermineNextCommandNameAndInputs
        which has the following description:\n\nAccepts a goal and context of the
        work so far and returns the inputs for the next command to run to make progress
        towards accomplishing the goal.  \n\nHere is the inputs JSON schema for the
        data you will receive:\n\n{\"type\":\"object\",\"required\":[\"command_class_names\",\"context\",\"goal\"],\"properties\":{\"goal\":{\"type\":\"string\",\"description\":\"What
        do you want the agent to attempt to accomplish?\"},\"context\":{\"type\":\"object\",\"properties\":{\"command_log\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"command_name\",\"outcome\"],\"properties\":{\"command_name\":{\"type\":\"string\",\"description\":\"Name
        of the command that was run\"},\"inputs\":{\"type\":[\"object\",\"null\"],\"description\":\"Inputs
        to the command\"},\"outcome\":{\"type\":\"object\",\"required\":[\"success\"],\"properties\":{\"success\":{\"type\":\"boolean\",\"description\":\"Whether
        the command succeeded or not\"},\"result\":{\"description\":\"Result of the
        command\"},\"errors_hash\":{\"description\":\"Errors that occurred during
        the command\"}}}}},\"description\":\"Log of all commands run so far and their
        outcomes\"}},\"description\":\"Context of the progress towards the goal so
        far\"},\"command_class_names\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}}}\n\nHere
        is the result JSON schema:\n\n{\"type\":\"object\",\"required\":[\"command_name\"],\"properties\":{\"command_name\":{\"type\":\"string\"},\"inputs\":{\"type\":[\"object\",\"null\"]}}}\n\nYou
        will receive 1 message containing only JSON data according to the inputs JSON
        schema above\nand you will generate a JSON response that is a valid response
        according to the result JSON schema above.\n\nYou will reply with nothing
        more than the JSON you''ve generated so that the calling code\ncan successfully
        parse your answer.\n"}'
    headers:
      Content-Type:
      - application/json
      X-Api-Key:
      - "<SCRUBBED_ANTHROPIC_API_KEY>"
      Anthropic-Version:
      - '2023-06-01'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 27 May 2025 23:35:49 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Anthropic-Ratelimit-Input-Tokens-Limit:
      - '40000'
      Anthropic-Ratelimit-Input-Tokens-Remaining:
      - '39000'
      Anthropic-Ratelimit-Input-Tokens-Reset:
      - '2025-05-27T23:35:49Z'
      Anthropic-Ratelimit-Output-Tokens-Limit:
      - '16000'
      Anthropic-Ratelimit-Output-Tokens-Remaining:
      - '16000'
      Anthropic-Ratelimit-Output-Tokens-Reset:
      - '2025-05-27T23:35:49Z'
      Anthropic-Ratelimit-Requests-Limit:
      - '1000'
      Anthropic-Ratelimit-Requests-Remaining:
      - '999'
      Anthropic-Ratelimit-Requests-Reset:
      - '2025-05-27T23:35:48Z'
      Anthropic-Ratelimit-Tokens-Limit:
      - '56000'
      Anthropic-Ratelimit-Tokens-Remaining:
      - '55000'
      Anthropic-Ratelimit-Tokens-Reset:
      - '2025-05-27T23:35:49Z'
      Request-Id:
      - req_011CPYusX1woPiZ4cLGg73fm
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Anthropic-Organization-Id:
      - 7a8e3751-3b70-4f90-a3ce-07f57c9d0bfc
      Via:
      - 1.1 google
      Cf-Cache-Status:
      - DYNAMIC
      X-Robots-Tag:
      - none
      Server:
      - cloudflare
      Cf-Ray:
      - 946954ae8bee17ec-SJC
    body:
      encoding: ASCII-8BIT
      string: '{"id":"msg_01RZiWfbha9HQ6yVSaN6SC3e","type":"message","role":"assistant","model":"claude-3-7-sonnet-20250219","content":[{"type":"text","text":"{\"command_name\":\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\",\"inputs\":null}"}],"stop_reason":"end_turn","stop_sequence":null,"usage":{"input_tokens":1106,"cache_creation_input_tokens":0,"cache_read_input_tokens":0,"output_tokens":35,"service_tier":"standard"}}'
  recorded_at: Tue, 27 May 2025 23:35:49 GMT
- request:
    method: post
    uri: https://api.anthropic.com/v1/messages
    body:
      encoding: UTF-8
      string: '{"model":"claude-3-7-sonnet-20250219","max_tokens":1024,"messages":[{"role":"user","content":"{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"context\":{\"command_log\":[{\"command_name\":\"Foobara::Agent::ListCommands\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":{\"user_provided_commands\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\"],\"agent_specific_commands\":[\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}}},{\"command_name\":\"Capybaras::FindAllCapybaras\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":[{\"name\":\"Fumiko\",\"year_of_birth\":2020,\"id\":1},{\"name\":\"Barbara\",\"year_of_birth\":19,\"id\":2},{\"name\":\"Basil\",\"year_of_birth\":2021,\"id\":3}]}},{\"command_name\":\"Foobara::Agent::DetermineNextCommandNameAndInputs\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\",\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]},\"outcome\":{\"success\":true,\"result\":{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"year_of_birth\":2019}}}},{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"year_of_birth\":2019},\"outcome\":{\"success\":true,\"result\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}}},{\"command_name\":\"Foobara::Agent::DetermineNextCommandNameAndInputs\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\",\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]},\"outcome\":{\"success\":false,\"errors_hash\":{\"data.cannot_cast\":{\"key\":\"data.cannot_cast\",\"path\":[],\"runtime_path\":[],\"category\":\"data\",\"symbol\":\"cannot_cast\",\"message\":\"Cannot
        cast nil to an attributes. Expected it to be a an array of pairs, or be a
        hash with symbolizable keys\",\"context\":{\"cast_to\":{\"type\":\"attributes\",\"element_type_declarations\":{\"message_to_user\":{\"description\":\"Optional
        message to the user\",\"type\":\"string\"},\"result_data\":{\"description\":\"The
        final result of the work if relevant/expected\",\"type\":\"duck\"}}},\"value\":null},\"is_fatal\":true}}}}]}}"}],"system":"You
        are implementing an API for a command named Foobara::Agent::CapybaraAgent::DetermineInputsForNextNotifyUserThatCurrentGoalHasBeenAccomplishedCommand
        which has the following description:\n\nAccepts a goal and context of the
        work so far and returns the inputs for the next NotifyUserThatCurrentGoalHasBeenAccomplished
        command to run to make progress towards accomplishing the goal.  \n\nHere
        is the inputs JSON schema for the data you will receive:\n\n{\"type\":\"object\",\"required\":[\"context\",\"goal\"],\"properties\":{\"goal\":{\"type\":\"string\",\"description\":\"What
        do you want the agent to attempt to accomplish?\"},\"context\":{\"type\":\"object\",\"properties\":{\"command_log\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"command_name\",\"outcome\"],\"properties\":{\"command_name\":{\"type\":\"string\",\"description\":\"Name
        of the command that was run\"},\"inputs\":{\"type\":[\"object\",\"null\"],\"description\":\"Inputs
        to the command\"},\"outcome\":{\"type\":\"object\",\"required\":[\"success\"],\"properties\":{\"success\":{\"type\":\"boolean\",\"description\":\"Whether
        the command succeeded or not\"},\"result\":{\"description\":\"Result of the
        command\"},\"errors_hash\":{\"description\":\"Errors that occurred during
        the command\"}}}}},\"description\":\"Log of all commands run so far and their
        outcomes\"}},\"description\":\"Context of the progress towards the goal so
        far\"}}}\n\nHere is the result JSON schema:\n\n{\"type\":\"object\",\"properties\":{\"message_to_user\":{\"type\":\"string\",\"description\":\"Optional
        message to the user\"},\"result_data\":{\"description\":\"The final result
        of the work if relevant/expected\"}}}\n\nYou will receive 1 message containing
        only JSON data according to the inputs JSON schema above\nand you will generate
        a JSON response that is a valid response according to the result JSON schema
        above.\n\nYou will reply with nothing more than the JSON you''ve generated
        so that the calling code\ncan successfully parse your answer.\n"}'
    headers:
      Content-Type:
      - application/json
      X-Api-Key:
      - "<SCRUBBED_ANTHROPIC_API_KEY>"
      Anthropic-Version:
      - '2023-06-01'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 27 May 2025 23:35:51 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Anthropic-Ratelimit-Input-Tokens-Limit:
      - '40000'
      Anthropic-Ratelimit-Input-Tokens-Remaining:
      - '39000'
      Anthropic-Ratelimit-Input-Tokens-Reset:
      - '2025-05-27T23:35:51Z'
      Anthropic-Ratelimit-Output-Tokens-Limit:
      - '16000'
      Anthropic-Ratelimit-Output-Tokens-Remaining:
      - '16000'
      Anthropic-Ratelimit-Output-Tokens-Reset:
      - '2025-05-27T23:35:51Z'
      Anthropic-Ratelimit-Requests-Limit:
      - '1000'
      Anthropic-Ratelimit-Requests-Remaining:
      - '999'
      Anthropic-Ratelimit-Requests-Reset:
      - '2025-05-27T23:35:49Z'
      Anthropic-Ratelimit-Tokens-Limit:
      - '56000'
      Anthropic-Ratelimit-Tokens-Remaining:
      - '55000'
      Anthropic-Ratelimit-Tokens-Reset:
      - '2025-05-27T23:35:51Z'
      Request-Id:
      - req_011CPYusd6KPnG9LH1hGUJze
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Anthropic-Organization-Id:
      - 7a8e3751-3b70-4f90-a3ce-07f57c9d0bfc
      Via:
      - 1.1 google
      Cf-Cache-Status:
      - DYNAMIC
      X-Robots-Tag:
      - none
      Server:
      - cloudflare
      Cf-Ray:
      - 946954b75cfff037-SJC
    body:
      encoding: ASCII-8BIT
      string: '{"id":"msg_01Y2FHZa3QkAbcoDYmA8Jnd6","type":"message","role":"assistant","model":"claude-3-7-sonnet-20250219","content":[{"type":"text","text":"{\"message_to_user\":\"I
        found and fixed the capybara with the incorrect year of birth. The capybara
        named ''Barbara'' had a birth year of 19, which was clearly incorrect. I updated
        the record to change the year of birth to 2019, which is now a reasonable
        value. The update was successful and Barbara''s record has been fixed.\"}"}],"stop_reason":"end_turn","stop_sequence":null,"usage":{"input_tokens":1347,"cache_creation_input_tokens":0,"cache_read_input_tokens":0,"output_tokens":82,"service_tier":"standard"}}'
  recorded_at: Tue, 27 May 2025 23:35:52 GMT
- request:
    method: post
    uri: https://api.anthropic.com/v1/messages
    body:
      encoding: UTF-8
      string: '{"model":"claude-3-7-sonnet-20250219","max_tokens":1024,"messages":[{"role":"user","content":"{\"goal\":\"Thank
        you so much! Can you set it back so that I can do the demo over again? Thanks!\",\"context\":{\"command_log\":[{\"command_name\":\"Foobara::Agent::ListCommands\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":{\"user_provided_commands\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\"],\"agent_specific_commands\":[\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}}},{\"command_name\":\"Capybaras::FindAllCapybaras\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":[{\"name\":\"Fumiko\",\"year_of_birth\":2020,\"id\":1},{\"name\":\"Barbara\",\"year_of_birth\":19,\"id\":2},{\"name\":\"Basil\",\"year_of_birth\":2021,\"id\":3}]}},{\"command_name\":\"Foobara::Agent::DetermineNextCommandNameAndInputs\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\",\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]},\"outcome\":{\"success\":true,\"result\":{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"year_of_birth\":2019}}}},{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"year_of_birth\":2019},\"outcome\":{\"success\":true,\"result\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}}},{\"command_name\":\"Foobara::Agent::DetermineNextCommandNameAndInputs\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\",\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]},\"outcome\":{\"success\":false,\"errors_hash\":{\"data.cannot_cast\":{\"key\":\"data.cannot_cast\",\"path\":[],\"runtime_path\":[],\"category\":\"data\",\"symbol\":\"cannot_cast\",\"message\":\"Cannot
        cast nil to an attributes. Expected it to be a an array of pairs, or be a
        hash with symbolizable keys\",\"context\":{\"cast_to\":{\"type\":\"attributes\",\"element_type_declarations\":{\"message_to_user\":{\"description\":\"Optional
        message to the user\",\"type\":\"string\"},\"result_data\":{\"description\":\"The
        final result of the work if relevant/expected\",\"type\":\"duck\"}}},\"value\":null},\"is_fatal\":true}}}},{\"command_name\":\"Foobara::Agent::CapybaraAgent::DetermineInputsForNextNotifyUserThatCurrentGoalHasBeenAccomplishedCommand\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\"},\"outcome\":{\"success\":true,\"result\":{\"message_to_user\":\"I
        found and fixed the capybara with the incorrect year of birth. The capybara
        named ''Barbara'' had a birth year of 19, which was clearly incorrect. I updated
        the record to change the year of birth to 2019, which is now a reasonable
        value. The update was successful and Barbara''s record has been fixed.\"}}},{\"command_name\":\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\",\"inputs\":{\"message_to_user\":\"I
        found and fixed the capybara with the incorrect year of birth. The capybara
        named ''Barbara'' had a birth year of 19, which was clearly incorrect. I updated
        the record to change the year of birth to 2019, which is now a reasonable
        value. The update was successful and Barbara''s record has been fixed.\"},\"outcome\":{\"success\":true,\"result\":{\"message_to_user\":\"I
        found and fixed the capybara with the incorrect year of birth. The capybara
        named ''Barbara'' had a birth year of 19, which was clearly incorrect. I updated
        the record to change the year of birth to 2019, which is now a reasonable
        value. The update was successful and Barbara''s record has been fixed.\"}}}]},\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}"}],"system":"You
        are implementing an API for a command named Foobara::Agent::DetermineNextCommandNameAndInputs
        which has the following description:\n\nAccepts a goal and context of the
        work so far and returns the inputs for the next command to run to make progress
        towards accomplishing the goal.  \n\nHere is the inputs JSON schema for the
        data you will receive:\n\n{\"type\":\"object\",\"required\":[\"command_class_names\",\"context\",\"goal\"],\"properties\":{\"goal\":{\"type\":\"string\",\"description\":\"What
        do you want the agent to attempt to accomplish?\"},\"context\":{\"type\":\"object\",\"properties\":{\"command_log\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"command_name\",\"outcome\"],\"properties\":{\"command_name\":{\"type\":\"string\",\"description\":\"Name
        of the command that was run\"},\"inputs\":{\"type\":[\"object\",\"null\"],\"description\":\"Inputs
        to the command\"},\"outcome\":{\"type\":\"object\",\"required\":[\"success\"],\"properties\":{\"success\":{\"type\":\"boolean\",\"description\":\"Whether
        the command succeeded or not\"},\"result\":{\"description\":\"Result of the
        command\"},\"errors_hash\":{\"description\":\"Errors that occurred during
        the command\"}}}}},\"description\":\"Log of all commands run so far and their
        outcomes\"}},\"description\":\"Context of the progress towards the goal so
        far\"},\"command_class_names\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}}}\n\nHere
        is the result JSON schema:\n\n{\"type\":\"object\",\"required\":[\"command_name\"],\"properties\":{\"command_name\":{\"type\":\"string\"},\"inputs\":{\"type\":[\"object\",\"null\"]}}}\n\nYou
        will receive 1 message containing only JSON data according to the inputs JSON
        schema above\nand you will generate a JSON response that is a valid response
        according to the result JSON schema above.\n\nYou will reply with nothing
        more than the JSON you''ve generated so that the calling code\ncan successfully
        parse your answer.\n"}'
    headers:
      Content-Type:
      - application/json
      X-Api-Key:
      - "<SCRUBBED_ANTHROPIC_API_KEY>"
      Anthropic-Version:
      - '2023-06-01'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 27 May 2025 23:35:53 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Anthropic-Ratelimit-Input-Tokens-Limit:
      - '40000'
      Anthropic-Ratelimit-Input-Tokens-Remaining:
      - '39000'
      Anthropic-Ratelimit-Input-Tokens-Reset:
      - '2025-05-27T23:35:55Z'
      Anthropic-Ratelimit-Output-Tokens-Limit:
      - '16000'
      Anthropic-Ratelimit-Output-Tokens-Remaining:
      - '16000'
      Anthropic-Ratelimit-Output-Tokens-Reset:
      - '2025-05-27T23:35:53Z'
      Anthropic-Ratelimit-Requests-Limit:
      - '1000'
      Anthropic-Ratelimit-Requests-Remaining:
      - '999'
      Anthropic-Ratelimit-Requests-Reset:
      - '2025-05-27T23:35:52Z'
      Anthropic-Ratelimit-Tokens-Limit:
      - '56000'
      Anthropic-Ratelimit-Tokens-Remaining:
      - '55000'
      Anthropic-Ratelimit-Tokens-Reset:
      - '2025-05-27T23:35:53Z'
      Request-Id:
      - req_011CPYusp7MSMWvNXPrLcyEs
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Anthropic-Organization-Id:
      - 7a8e3751-3b70-4f90-a3ce-07f57c9d0bfc
      Via:
      - 1.1 google
      Cf-Cache-Status:
      - DYNAMIC
      X-Robots-Tag:
      - none
      Server:
      - cloudflare
      Cf-Ray:
      - 946954c78841ebf1-SJC
    body:
      encoding: ASCII-8BIT
      string: '{"id":"msg_016QCM4F8LvqgMWbjsuoVfRd","type":"message","role":"assistant","model":"claude-3-7-sonnet-20250219","content":[{"type":"text","text":"{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"year_of_birth\":19}}"}],"stop_reason":"end_turn","stop_sequence":null,"usage":{"input_tokens":1818,"cache_creation_input_tokens":0,"cache_read_input_tokens":0,"output_tokens":34,"service_tier":"standard"}}'
  recorded_at: Tue, 27 May 2025 23:35:53 GMT
- request:
    method: post
    uri: https://api.anthropic.com/v1/messages
    body:
      encoding: UTF-8
      string: '{"model":"claude-3-7-sonnet-20250219","max_tokens":1024,"messages":[{"role":"user","content":"{\"goal\":\"Thank
        you so much! Can you set it back so that I can do the demo over again? Thanks!\",\"context\":{\"command_log\":[{\"command_name\":\"Foobara::Agent::ListCommands\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":{\"user_provided_commands\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\"],\"agent_specific_commands\":[\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}}},{\"command_name\":\"Capybaras::FindAllCapybaras\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":[{\"name\":\"Fumiko\",\"year_of_birth\":2020,\"id\":1},{\"name\":\"Barbara\",\"year_of_birth\":19,\"id\":2},{\"name\":\"Basil\",\"year_of_birth\":2021,\"id\":3}]}},{\"command_name\":\"Foobara::Agent::DetermineNextCommandNameAndInputs\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\",\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]},\"outcome\":{\"success\":true,\"result\":{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"year_of_birth\":2019}}}},{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"year_of_birth\":2019},\"outcome\":{\"success\":true,\"result\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}}},{\"command_name\":\"Foobara::Agent::DetermineNextCommandNameAndInputs\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\",\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]},\"outcome\":{\"success\":false,\"errors_hash\":{\"data.cannot_cast\":{\"key\":\"data.cannot_cast\",\"path\":[],\"runtime_path\":[],\"category\":\"data\",\"symbol\":\"cannot_cast\",\"message\":\"Cannot
        cast nil to an attributes. Expected it to be a an array of pairs, or be a
        hash with symbolizable keys\",\"context\":{\"cast_to\":{\"type\":\"attributes\",\"element_type_declarations\":{\"message_to_user\":{\"description\":\"Optional
        message to the user\",\"type\":\"string\"},\"result_data\":{\"description\":\"The
        final result of the work if relevant/expected\",\"type\":\"duck\"}}},\"value\":null},\"is_fatal\":true}}}},{\"command_name\":\"Foobara::Agent::CapybaraAgent::DetermineInputsForNextNotifyUserThatCurrentGoalHasBeenAccomplishedCommand\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\"},\"outcome\":{\"success\":true,\"result\":{\"message_to_user\":\"I
        found and fixed the capybara with the incorrect year of birth. The capybara
        named ''Barbara'' had a birth year of 19, which was clearly incorrect. I updated
        the record to change the year of birth to 2019, which is now a reasonable
        value. The update was successful and Barbara''s record has been fixed.\"}}},{\"command_name\":\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\",\"inputs\":{\"message_to_user\":\"I
        found and fixed the capybara with the incorrect year of birth. The capybara
        named ''Barbara'' had a birth year of 19, which was clearly incorrect. I updated
        the record to change the year of birth to 2019, which is now a reasonable
        value. The update was successful and Barbara''s record has been fixed.\"},\"outcome\":{\"success\":true,\"result\":{\"message_to_user\":\"I
        found and fixed the capybara with the incorrect year of birth. The capybara
        named ''Barbara'' had a birth year of 19, which was clearly incorrect. I updated
        the record to change the year of birth to 2019, which is now a reasonable
        value. The update was successful and Barbara''s record has been fixed.\"}}},{\"command_name\":\"Foobara::Agent::DetermineNextCommandNameAndInputs\",\"inputs\":{\"goal\":\"Thank
        you so much! Can you set it back so that I can do the demo over again? Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\",\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]},\"outcome\":{\"success\":true,\"result\":{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"year_of_birth\":19}}}},{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"year_of_birth\":19},\"outcome\":{\"success\":true,\"result\":{\"name\":\"Barbara\",\"year_of_birth\":19,\"id\":2}}}]},\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}"}],"system":"You
        are implementing an API for a command named Foobara::Agent::DetermineNextCommandNameAndInputs
        which has the following description:\n\nAccepts a goal and context of the
        work so far and returns the inputs for the next command to run to make progress
        towards accomplishing the goal.  \n\nHere is the inputs JSON schema for the
        data you will receive:\n\n{\"type\":\"object\",\"required\":[\"command_class_names\",\"context\",\"goal\"],\"properties\":{\"goal\":{\"type\":\"string\",\"description\":\"What
        do you want the agent to attempt to accomplish?\"},\"context\":{\"type\":\"object\",\"properties\":{\"command_log\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"command_name\",\"outcome\"],\"properties\":{\"command_name\":{\"type\":\"string\",\"description\":\"Name
        of the command that was run\"},\"inputs\":{\"type\":[\"object\",\"null\"],\"description\":\"Inputs
        to the command\"},\"outcome\":{\"type\":\"object\",\"required\":[\"success\"],\"properties\":{\"success\":{\"type\":\"boolean\",\"description\":\"Whether
        the command succeeded or not\"},\"result\":{\"description\":\"Result of the
        command\"},\"errors_hash\":{\"description\":\"Errors that occurred during
        the command\"}}}}},\"description\":\"Log of all commands run so far and their
        outcomes\"}},\"description\":\"Context of the progress towards the goal so
        far\"},\"command_class_names\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}}}\n\nHere
        is the result JSON schema:\n\n{\"type\":\"object\",\"required\":[\"command_name\"],\"properties\":{\"command_name\":{\"type\":\"string\"},\"inputs\":{\"type\":[\"object\",\"null\"]}}}\n\nYou
        will receive 1 message containing only JSON data according to the inputs JSON
        schema above\nand you will generate a JSON response that is a valid response
        according to the result JSON schema above.\n\nYou will reply with nothing
        more than the JSON you''ve generated so that the calling code\ncan successfully
        parse your answer.\n"}'
    headers:
      Content-Type:
      - application/json
      X-Api-Key:
      - "<SCRUBBED_ANTHROPIC_API_KEY>"
      Anthropic-Version:
      - '2023-06-01'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 27 May 2025 23:35:56 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Anthropic-Ratelimit-Input-Tokens-Limit:
      - '40000'
      Anthropic-Ratelimit-Input-Tokens-Remaining:
      - '38000'
      Anthropic-Ratelimit-Input-Tokens-Reset:
      - '2025-05-27T23:35:58Z'
      Anthropic-Ratelimit-Output-Tokens-Limit:
      - '16000'
      Anthropic-Ratelimit-Output-Tokens-Remaining:
      - '16000'
      Anthropic-Ratelimit-Output-Tokens-Reset:
      - '2025-05-27T23:35:56Z'
      Anthropic-Ratelimit-Requests-Limit:
      - '1000'
      Anthropic-Ratelimit-Requests-Remaining:
      - '999'
      Anthropic-Ratelimit-Requests-Reset:
      - '2025-05-27T23:35:54Z'
      Anthropic-Ratelimit-Tokens-Limit:
      - '56000'
      Anthropic-Ratelimit-Tokens-Remaining:
      - '54000'
      Anthropic-Ratelimit-Tokens-Reset:
      - '2025-05-27T23:35:56Z'
      Request-Id:
      - req_011CPYuswzcrrDbDZ5nhCgdB
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Anthropic-Organization-Id:
      - 7a8e3751-3b70-4f90-a3ce-07f57c9d0bfc
      Via:
      - 1.1 google
      Cf-Cache-Status:
      - DYNAMIC
      X-Robots-Tag:
      - none
      Server:
      - cloudflare
      Cf-Ray:
      - 946954d30fda67a8-SJC
    body:
      encoding: ASCII-8BIT
      string: '{"id":"msg_017CdMfkwG8hSNDWf8kL9d4J","type":"message","role":"assistant","model":"claude-3-7-sonnet-20250219","content":[{"type":"text","text":"{\"command_name\":\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\",\"inputs\":{\"message_to_user\":\"I''ve
        successfully reset Barbara''s year of birth back to 19, so you can run the
        demo again. The capybara data is now in its original state with the incorrect
        year of birth that needs fixing.\"}}"}],"stop_reason":"end_turn","stop_sequence":null,"usage":{"input_tokens":2099,"cache_creation_input_tokens":0,"cache_read_input_tokens":0,"output_tokens":84,"service_tier":"standard"}}'
  recorded_at: Tue, 27 May 2025 23:35:56 GMT
recorded_with: VCR 6.3.1
