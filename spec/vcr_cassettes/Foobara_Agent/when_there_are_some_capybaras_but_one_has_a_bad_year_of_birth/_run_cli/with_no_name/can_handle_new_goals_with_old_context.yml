---
http_interactions:
- request:
    method: post
    uri: https://api.anthropic.com/v1/messages
    body:
      encoding: UTF-8
      string: '{"model":"claude-3-7-sonnet-20250219","max_tokens":1024,"messages":[{"role":"user","content":"{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"context\":{\"command_log\":[{\"command_name\":\"Foobara::Agent::ListCommands\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":{\"user_provided_commands\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\"],\"agent_specific_commands\":[\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}}}]},\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}"}],"system":"You
        are implementing an API for a command named Foobara::Agent::DetermineNextCommandNameAndInputs
        which has the following description:\n\nAccepts the current goal, which might
        already be accomplished, and context of the work  so far and returns the inputs
        for the next command to run to make progress towards accomplishing the goal.
        If the goal has already been accomplished then choose the NotifyUserThatCurrentGoalHasBeenAccomplished
        command.  \n\nHere is the inputs JSON schema for the data you will receive:\n\n{\"type\":\"object\",\"required\":[\"command_class_names\",\"context\",\"goal\"],\"properties\":{\"goal\":{\"type\":\"string\",\"description\":\"The
        current goal to accomplish. If the goal has already been accomplished by the
        previous command runs then choose NotifyUserThatCurrentGoalHasBeenAccomplished
        to stop the loop.\"},\"context\":{\"type\":\"object\",\"properties\":{\"command_log\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"command_name\",\"outcome\"],\"properties\":{\"command_name\":{\"type\":\"string\",\"description\":\"Name
        of the command that was run\"},\"inputs\":{\"type\":[\"object\",\"null\"],\"description\":\"Inputs
        to the command\"},\"outcome\":{\"type\":\"object\",\"required\":[\"success\"],\"properties\":{\"success\":{\"type\":\"boolean\",\"description\":\"Whether
        the command succeeded or not\"},\"result\":{\"description\":\"Result of the
        command\"},\"errors_hash\":{\"description\":\"Errors that occurred during
        the command\"}}}}},\"description\":\"Log of all commands run so far and their
        outcomes\"}},\"description\":\"Context of the progress towards the goal so
        far\"},\"command_class_names\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}}}\n\nHere
        is the result JSON schema:\n\n{\"type\":\"object\",\"required\":[\"command_name\"],\"properties\":{\"command_name\":{\"type\":\"string\"},\"inputs\":{\"type\":[\"object\",\"null\"]}}}\n\nYou
        will receive 1 message containing only JSON data according to the inputs JSON
        schema above\nand you will generate a JSON response that is a valid response
        according to the result JSON schema above.\n\nYou will reply with nothing
        more than the JSON you''ve generated so that the calling code\ncan successfully
        parse your answer.\n"}'
    headers:
      Content-Type:
      - application/json
      X-Api-Key:
      - "<SCRUBBED_ANTHROPIC_API_KEY>"
      Anthropic-Version:
      - '2023-06-01'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 30 May 2025 22:04:41 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Anthropic-Ratelimit-Input-Tokens-Limit:
      - '40000'
      Anthropic-Ratelimit-Input-Tokens-Remaining:
      - '40000'
      Anthropic-Ratelimit-Input-Tokens-Reset:
      - '2025-05-30T22:04:41Z'
      Anthropic-Ratelimit-Output-Tokens-Limit:
      - '16000'
      Anthropic-Ratelimit-Output-Tokens-Remaining:
      - '16000'
      Anthropic-Ratelimit-Output-Tokens-Reset:
      - '2025-05-30T22:04:41Z'
      Anthropic-Ratelimit-Requests-Limit:
      - '1000'
      Anthropic-Ratelimit-Requests-Remaining:
      - '999'
      Anthropic-Ratelimit-Requests-Reset:
      - '2025-05-30T22:04:40Z'
      Anthropic-Ratelimit-Tokens-Limit:
      - '56000'
      Anthropic-Ratelimit-Tokens-Remaining:
      - '56000'
      Anthropic-Ratelimit-Tokens-Reset:
      - '2025-05-30T22:04:41Z'
      Request-Id:
      - req_011CPeUMDKMXJYztxoeC6TeU
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Anthropic-Organization-Id:
      - 7a8e3751-3b70-4f90-a3ce-07f57c9d0bfc
      Via:
      - 1.1 google
      Cf-Cache-Status:
      - DYNAMIC
      X-Robots-Tag:
      - none
      Server:
      - cloudflare
      Cf-Ray:
      - 948187510b5acee5-SJC
    body:
      encoding: ASCII-8BIT
      string: '{"id":"msg_0172CNzRSXT19jj8oxLGqgRL","type":"message","role":"assistant","model":"claude-3-7-sonnet-20250219","content":[{"type":"text","text":"{\"command_name\":\"Capybaras::FindAllCapybaras\",\"inputs\":null}"}],"stop_reason":"end_turn","stop_sequence":null,"usage":{"input_tokens":794,"cache_creation_input_tokens":0,"cache_read_input_tokens":0,"output_tokens":25,"service_tier":"standard"}}'
  recorded_at: Fri, 30 May 2025 22:04:41 GMT
- request:
    method: post
    uri: https://api.anthropic.com/v1/messages
    body:
      encoding: UTF-8
      string: '{"model":"claude-3-7-sonnet-20250219","max_tokens":1024,"messages":[{"role":"user","content":"{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"context\":{\"command_log\":[{\"command_name\":\"Foobara::Agent::ListCommands\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":{\"user_provided_commands\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\"],\"agent_specific_commands\":[\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}}},{\"command_name\":\"Capybaras::FindAllCapybaras\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":[{\"name\":\"Fumiko\",\"year_of_birth\":2020,\"id\":1},{\"name\":\"Barbara\",\"year_of_birth\":19,\"id\":2},{\"name\":\"Basil\",\"year_of_birth\":2021,\"id\":3}]}}]},\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}"}],"system":"You
        are implementing an API for a command named Foobara::Agent::DetermineNextCommandNameAndInputs
        which has the following description:\n\nAccepts the current goal, which might
        already be accomplished, and context of the work  so far and returns the inputs
        for the next command to run to make progress towards accomplishing the goal.
        If the goal has already been accomplished then choose the NotifyUserThatCurrentGoalHasBeenAccomplished
        command.  \n\nHere is the inputs JSON schema for the data you will receive:\n\n{\"type\":\"object\",\"required\":[\"command_class_names\",\"context\",\"goal\"],\"properties\":{\"goal\":{\"type\":\"string\",\"description\":\"The
        current goal to accomplish. If the goal has already been accomplished by the
        previous command runs then choose NotifyUserThatCurrentGoalHasBeenAccomplished
        to stop the loop.\"},\"context\":{\"type\":\"object\",\"properties\":{\"command_log\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"command_name\",\"outcome\"],\"properties\":{\"command_name\":{\"type\":\"string\",\"description\":\"Name
        of the command that was run\"},\"inputs\":{\"type\":[\"object\",\"null\"],\"description\":\"Inputs
        to the command\"},\"outcome\":{\"type\":\"object\",\"required\":[\"success\"],\"properties\":{\"success\":{\"type\":\"boolean\",\"description\":\"Whether
        the command succeeded or not\"},\"result\":{\"description\":\"Result of the
        command\"},\"errors_hash\":{\"description\":\"Errors that occurred during
        the command\"}}}}},\"description\":\"Log of all commands run so far and their
        outcomes\"}},\"description\":\"Context of the progress towards the goal so
        far\"},\"command_class_names\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}}}\n\nHere
        is the result JSON schema:\n\n{\"type\":\"object\",\"required\":[\"command_name\"],\"properties\":{\"command_name\":{\"type\":\"string\"},\"inputs\":{\"type\":[\"object\",\"null\"]}}}\n\nYou
        will receive 1 message containing only JSON data according to the inputs JSON
        schema above\nand you will generate a JSON response that is a valid response
        according to the result JSON schema above.\n\nYou will reply with nothing
        more than the JSON you''ve generated so that the calling code\ncan successfully
        parse your answer.\n"}'
    headers:
      Content-Type:
      - application/json
      X-Api-Key:
      - "<SCRUBBED_ANTHROPIC_API_KEY>"
      Anthropic-Version:
      - '2023-06-01'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 30 May 2025 22:04:45 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Anthropic-Ratelimit-Input-Tokens-Limit:
      - '40000'
      Anthropic-Ratelimit-Input-Tokens-Remaining:
      - '40000'
      Anthropic-Ratelimit-Input-Tokens-Reset:
      - '2025-05-30T22:04:44Z'
      Anthropic-Ratelimit-Output-Tokens-Limit:
      - '16000'
      Anthropic-Ratelimit-Output-Tokens-Remaining:
      - '16000'
      Anthropic-Ratelimit-Output-Tokens-Reset:
      - '2025-05-30T22:04:45Z'
      Anthropic-Ratelimit-Requests-Limit:
      - '1000'
      Anthropic-Ratelimit-Requests-Remaining:
      - '999'
      Anthropic-Ratelimit-Requests-Reset:
      - '2025-05-30T22:04:42Z'
      Anthropic-Ratelimit-Tokens-Limit:
      - '56000'
      Anthropic-Ratelimit-Tokens-Remaining:
      - '56000'
      Anthropic-Ratelimit-Tokens-Reset:
      - '2025-05-30T22:04:44Z'
      Request-Id:
      - req_011CPeUMKK1syZA6yRgPmWLP
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Anthropic-Organization-Id:
      - 7a8e3751-3b70-4f90-a3ce-07f57c9d0bfc
      Via:
      - 1.1 google
      Cf-Cache-Status:
      - DYNAMIC
      X-Robots-Tag:
      - none
      Server:
      - cloudflare
      Cf-Ray:
      - 94818759ca00f037-SJC
    body:
      encoding: ASCII-8BIT
      string: '{"id":"msg_01DFyt4H62Jnntbpq9c8cbbJ","type":"message","role":"assistant","model":"claude-3-7-sonnet-20250219","content":[{"type":"text","text":"{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"capybara\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}}}"}],"stop_reason":"end_turn","stop_sequence":null,"usage":{"input_tokens":885,"cache_creation_input_tokens":0,"cache_read_input_tokens":0,"output_tokens":49,"service_tier":"standard"}}'
  recorded_at: Fri, 30 May 2025 22:04:45 GMT
- request:
    method: post
    uri: https://api.anthropic.com/v1/messages
    body:
      encoding: UTF-8
      string: '{"model":"claude-3-7-sonnet-20250219","max_tokens":1024,"messages":[{"role":"user","content":"{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"context\":{\"command_log\":[{\"command_name\":\"Foobara::Agent::ListCommands\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":{\"user_provided_commands\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\"],\"agent_specific_commands\":[\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}}},{\"command_name\":\"Capybaras::FindAllCapybaras\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":[{\"name\":\"Fumiko\",\"year_of_birth\":2020,\"id\":1},{\"name\":\"Barbara\",\"year_of_birth\":19,\"id\":2},{\"name\":\"Basil\",\"year_of_birth\":2021,\"id\":3}]}},{\"command_name\":\"Foobara::Agent::DetermineNextCommandNameAndInputs\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\",\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]},\"outcome\":{\"success\":false,\"result\":{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"capybara\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}}},\"errors_hash\":{\"data.unexpected_attributes\":{\"key\":\"data.unexpected_attributes\",\"path\":[],\"runtime_path\":[],\"category\":\"data\",\"symbol\":\"unexpected_attributes\",\"message\":\"Unexpected
        attributes [:capybara]. Expected only [:id, :name, :year_of_birth]\",\"context\":{\"unexpected_attributes\":[\"capybara\"],\"allowed_attributes\":[\"id\",\"name\",\"year_of_birth\"]},\"is_fatal\":true}}}}]}}"}],"system":"You
        are implementing an API for a command named Foobara::Agent::Anonacf6::DetermineInputsForNextUpdateCapybaraCommand
        which has the following description:\n\nAccepts a goal and context of the
        work so far and returns the inputs for the next UpdateCapybara command to
        run to make progress towards accomplishing the goal.  \n\nHere is the inputs
        JSON schema for the data you will receive:\n\n{\"type\":\"object\",\"required\":[\"context\",\"goal\"],\"properties\":{\"goal\":{\"type\":\"string\",\"description\":\"The
        current (possibly already accomplished) goal\"},\"context\":{\"type\":\"object\",\"properties\":{\"command_log\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"command_name\",\"outcome\"],\"properties\":{\"command_name\":{\"type\":\"string\",\"description\":\"Name
        of the command that was run\"},\"inputs\":{\"type\":[\"object\",\"null\"],\"description\":\"Inputs
        to the command\"},\"outcome\":{\"type\":\"object\",\"required\":[\"success\"],\"properties\":{\"success\":{\"type\":\"boolean\",\"description\":\"Whether
        the command succeeded or not\"},\"result\":{\"description\":\"Result of the
        command\"},\"errors_hash\":{\"description\":\"Errors that occurred during
        the command\"}}}}},\"description\":\"Log of all commands run so far and their
        outcomes\"}},\"description\":\"Context of the progress towards the goal so
        far\"}}}\n\nHere is the result JSON schema:\n\n{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"number\"},\"name\":{\"type\":\"string\",\"description\":\"Name
        of the Capybara\"},\"year_of_birth\":{\"type\":\"number\",\"description\":\"The
        year the Capybara was born\"}}}\n\nYou will receive 1 message containing only
        JSON data according to the inputs JSON schema above\nand you will generate
        a JSON response that is a valid response according to the result JSON schema
        above.\n\nYou will reply with nothing more than the JSON you''ve generated
        so that the calling code\ncan successfully parse your answer.\n"}'
    headers:
      Content-Type:
      - application/json
      X-Api-Key:
      - "<SCRUBBED_ANTHROPIC_API_KEY>"
      Anthropic-Version:
      - '2023-06-01'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 30 May 2025 22:04:48 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Anthropic-Ratelimit-Input-Tokens-Limit:
      - '40000'
      Anthropic-Ratelimit-Input-Tokens-Remaining:
      - '40000'
      Anthropic-Ratelimit-Input-Tokens-Reset:
      - '2025-05-30T22:04:48Z'
      Anthropic-Ratelimit-Output-Tokens-Limit:
      - '16000'
      Anthropic-Ratelimit-Output-Tokens-Remaining:
      - '16000'
      Anthropic-Ratelimit-Output-Tokens-Reset:
      - '2025-05-30T22:04:48Z'
      Anthropic-Ratelimit-Requests-Limit:
      - '1000'
      Anthropic-Ratelimit-Requests-Remaining:
      - '999'
      Anthropic-Ratelimit-Requests-Reset:
      - '2025-05-30T22:04:45Z'
      Anthropic-Ratelimit-Tokens-Limit:
      - '56000'
      Anthropic-Ratelimit-Tokens-Remaining:
      - '56000'
      Anthropic-Ratelimit-Tokens-Reset:
      - '2025-05-30T22:04:48Z'
      Request-Id:
      - req_011CPeUMbRt6abWMtQdPquQn
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Anthropic-Organization-Id:
      - 7a8e3751-3b70-4f90-a3ce-07f57c9d0bfc
      Via:
      - 1.1 google
      Cf-Cache-Status:
      - DYNAMIC
      X-Robots-Tag:
      - none
      Server:
      - cloudflare
      Cf-Ray:
      - 948187715c9d3ad4-SJC
    body:
      encoding: ASCII-8BIT
      string: '{"id":"msg_01K6t1Y5SgQ1mCmuLKDyPjxt","type":"message","role":"assistant","model":"claude-3-7-sonnet-20250219","content":[{"type":"text","text":"{\"id\":2,\"name\":\"Barbara\",\"year_of_birth\":2019}"}],"stop_reason":"end_turn","stop_sequence":null,"usage":{"input_tokens":1062,"cache_creation_input_tokens":0,"cache_read_input_tokens":0,"output_tokens":21,"service_tier":"standard"}}'
  recorded_at: Fri, 30 May 2025 22:04:48 GMT
- request:
    method: post
    uri: https://api.anthropic.com/v1/messages
    body:
      encoding: UTF-8
      string: '{"model":"claude-3-7-sonnet-20250219","max_tokens":1024,"messages":[{"role":"user","content":"{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"context\":{\"command_log\":[{\"command_name\":\"Foobara::Agent::ListCommands\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":{\"user_provided_commands\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\"],\"agent_specific_commands\":[\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}}},{\"command_name\":\"Capybaras::FindAllCapybaras\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":[{\"name\":\"Fumiko\",\"year_of_birth\":2020,\"id\":1},{\"name\":\"Barbara\",\"year_of_birth\":19,\"id\":2},{\"name\":\"Basil\",\"year_of_birth\":2021,\"id\":3}]}},{\"command_name\":\"Foobara::Agent::DetermineNextCommandNameAndInputs\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\",\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]},\"outcome\":{\"success\":false,\"result\":{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"capybara\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}}},\"errors_hash\":{\"data.unexpected_attributes\":{\"key\":\"data.unexpected_attributes\",\"path\":[],\"runtime_path\":[],\"category\":\"data\",\"symbol\":\"unexpected_attributes\",\"message\":\"Unexpected
        attributes [:capybara]. Expected only [:id, :name, :year_of_birth]\",\"context\":{\"unexpected_attributes\":[\"capybara\"],\"allowed_attributes\":[\"id\",\"name\",\"year_of_birth\"]},\"is_fatal\":true}}}},{\"command_name\":\"Foobara::Agent::Anonacf6::DetermineInputsForNextUpdateCapybaraCommand\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\"},\"outcome\":{\"success\":true,\"result\":{\"id\":2,\"name\":\"Barbara\",\"year_of_birth\":2019}}},{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"name\":\"Barbara\",\"year_of_birth\":2019},\"outcome\":{\"success\":true,\"result\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}}}]},\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}"}],"system":"You
        are implementing an API for a command named Foobara::Agent::DetermineNextCommandNameAndInputs
        which has the following description:\n\nAccepts the current goal, which might
        already be accomplished, and context of the work  so far and returns the inputs
        for the next command to run to make progress towards accomplishing the goal.
        If the goal has already been accomplished then choose the NotifyUserThatCurrentGoalHasBeenAccomplished
        command.  \n\nHere is the inputs JSON schema for the data you will receive:\n\n{\"type\":\"object\",\"required\":[\"command_class_names\",\"context\",\"goal\"],\"properties\":{\"goal\":{\"type\":\"string\",\"description\":\"The
        current goal to accomplish. If the goal has already been accomplished by the
        previous command runs then choose NotifyUserThatCurrentGoalHasBeenAccomplished
        to stop the loop.\"},\"context\":{\"type\":\"object\",\"properties\":{\"command_log\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"command_name\",\"outcome\"],\"properties\":{\"command_name\":{\"type\":\"string\",\"description\":\"Name
        of the command that was run\"},\"inputs\":{\"type\":[\"object\",\"null\"],\"description\":\"Inputs
        to the command\"},\"outcome\":{\"type\":\"object\",\"required\":[\"success\"],\"properties\":{\"success\":{\"type\":\"boolean\",\"description\":\"Whether
        the command succeeded or not\"},\"result\":{\"description\":\"Result of the
        command\"},\"errors_hash\":{\"description\":\"Errors that occurred during
        the command\"}}}}},\"description\":\"Log of all commands run so far and their
        outcomes\"}},\"description\":\"Context of the progress towards the goal so
        far\"},\"command_class_names\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}}}\n\nHere
        is the result JSON schema:\n\n{\"type\":\"object\",\"required\":[\"command_name\"],\"properties\":{\"command_name\":{\"type\":\"string\"},\"inputs\":{\"type\":[\"object\",\"null\"]}}}\n\nYou
        will receive 1 message containing only JSON data according to the inputs JSON
        schema above\nand you will generate a JSON response that is a valid response
        according to the result JSON schema above.\n\nYou will reply with nothing
        more than the JSON you''ve generated so that the calling code\ncan successfully
        parse your answer.\n"}'
    headers:
      Content-Type:
      - application/json
      X-Api-Key:
      - "<SCRUBBED_ANTHROPIC_API_KEY>"
      Anthropic-Version:
      - '2023-06-01'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 30 May 2025 22:04:52 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Anthropic-Ratelimit-Input-Tokens-Limit:
      - '40000'
      Anthropic-Ratelimit-Input-Tokens-Remaining:
      - '40000'
      Anthropic-Ratelimit-Input-Tokens-Reset:
      - '2025-05-30T22:04:52Z'
      Anthropic-Ratelimit-Output-Tokens-Limit:
      - '16000'
      Anthropic-Ratelimit-Output-Tokens-Remaining:
      - '16000'
      Anthropic-Ratelimit-Output-Tokens-Reset:
      - '2025-05-30T22:04:52Z'
      Anthropic-Ratelimit-Requests-Limit:
      - '1000'
      Anthropic-Ratelimit-Requests-Remaining:
      - '999'
      Anthropic-Ratelimit-Requests-Reset:
      - '2025-05-30T22:04:49Z'
      Anthropic-Ratelimit-Tokens-Limit:
      - '56000'
      Anthropic-Ratelimit-Tokens-Remaining:
      - '56000'
      Anthropic-Ratelimit-Tokens-Reset:
      - '2025-05-30T22:04:52Z'
      Request-Id:
      - req_011CPeUMrdw1J8uoHp5ys2Sj
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Anthropic-Organization-Id:
      - 7a8e3751-3b70-4f90-a3ce-07f57c9d0bfc
      Via:
      - 1.1 google
      Cf-Cache-Status:
      - DYNAMIC
      X-Robots-Tag:
      - none
      Server:
      - cloudflare
      Cf-Ray:
      - 94818785fa8c1592-SJC
    body:
      encoding: ASCII-8BIT
      string: '{"id":"msg_018ubN72Yie7jNdTFfDiNXHK","type":"message","role":"assistant","model":"claude-3-7-sonnet-20250219","content":[{"type":"text","text":"{\"command_name\":\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\",\"inputs\":null}"}],"stop_reason":"end_turn","stop_sequence":null,"usage":{"input_tokens":1402,"cache_creation_input_tokens":0,"cache_read_input_tokens":0,"output_tokens":35,"service_tier":"standard"}}'
  recorded_at: Fri, 30 May 2025 22:04:52 GMT
- request:
    method: post
    uri: https://api.anthropic.com/v1/messages
    body:
      encoding: UTF-8
      string: '{"model":"claude-3-7-sonnet-20250219","max_tokens":1024,"messages":[{"role":"user","content":"{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"context\":{\"command_log\":[{\"command_name\":\"Foobara::Agent::ListCommands\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":{\"user_provided_commands\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\"],\"agent_specific_commands\":[\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}}},{\"command_name\":\"Capybaras::FindAllCapybaras\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":[{\"name\":\"Fumiko\",\"year_of_birth\":2020,\"id\":1},{\"name\":\"Barbara\",\"year_of_birth\":19,\"id\":2},{\"name\":\"Basil\",\"year_of_birth\":2021,\"id\":3}]}},{\"command_name\":\"Foobara::Agent::DetermineNextCommandNameAndInputs\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\",\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]},\"outcome\":{\"success\":false,\"result\":{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"capybara\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}}},\"errors_hash\":{\"data.unexpected_attributes\":{\"key\":\"data.unexpected_attributes\",\"path\":[],\"runtime_path\":[],\"category\":\"data\",\"symbol\":\"unexpected_attributes\",\"message\":\"Unexpected
        attributes [:capybara]. Expected only [:id, :name, :year_of_birth]\",\"context\":{\"unexpected_attributes\":[\"capybara\"],\"allowed_attributes\":[\"id\",\"name\",\"year_of_birth\"]},\"is_fatal\":true}}}},{\"command_name\":\"Foobara::Agent::Anonacf6::DetermineInputsForNextUpdateCapybaraCommand\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\"},\"outcome\":{\"success\":true,\"result\":{\"id\":2,\"name\":\"Barbara\",\"year_of_birth\":2019}}},{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"name\":\"Barbara\",\"year_of_birth\":2019},\"outcome\":{\"success\":true,\"result\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}}},{\"command_name\":\"Foobara::Agent::DetermineNextCommandNameAndInputs\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\",\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]},\"outcome\":{\"success\":false,\"result\":{\"command_name\":\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\",\"inputs\":null},\"errors_hash\":{\"data.cannot_cast\":{\"key\":\"data.cannot_cast\",\"path\":[],\"runtime_path\":[],\"category\":\"data\",\"symbol\":\"cannot_cast\",\"message\":\"Cannot
        cast nil to an attributes. Expected it to be a an array of pairs, or be a
        hash with symbolizable keys\",\"context\":{\"cast_to\":{\"type\":\"attributes\",\"element_type_declarations\":{\"message_to_user\":{\"description\":\"Optional
        message to the user\",\"type\":\"string\"},\"result_data\":{\"description\":\"The
        final result of the work if relevant/expected\",\"type\":\"duck\"}}},\"value\":null},\"is_fatal\":true}}}}]}}"}],"system":"You
        are implementing an API for a command named Foobara::Agent::Anonacf6::DetermineInputsForNextNotifyUserThatCurrentGoalHasBeenAccomplishedCommand
        which has the following description:\n\nAccepts a goal and context of the
        work so far and returns the inputs for the next NotifyUserThatCurrentGoalHasBeenAccomplished
        command to run to make progress towards accomplishing the goal.  \n\nHere
        is the inputs JSON schema for the data you will receive:\n\n{\"type\":\"object\",\"required\":[\"context\",\"goal\"],\"properties\":{\"goal\":{\"type\":\"string\",\"description\":\"The
        current (possibly already accomplished) goal\"},\"context\":{\"type\":\"object\",\"properties\":{\"command_log\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"command_name\",\"outcome\"],\"properties\":{\"command_name\":{\"type\":\"string\",\"description\":\"Name
        of the command that was run\"},\"inputs\":{\"type\":[\"object\",\"null\"],\"description\":\"Inputs
        to the command\"},\"outcome\":{\"type\":\"object\",\"required\":[\"success\"],\"properties\":{\"success\":{\"type\":\"boolean\",\"description\":\"Whether
        the command succeeded or not\"},\"result\":{\"description\":\"Result of the
        command\"},\"errors_hash\":{\"description\":\"Errors that occurred during
        the command\"}}}}},\"description\":\"Log of all commands run so far and their
        outcomes\"}},\"description\":\"Context of the progress towards the goal so
        far\"}}}\n\nHere is the result JSON schema:\n\n{\"type\":\"object\",\"properties\":{\"message_to_user\":{\"type\":\"string\",\"description\":\"Optional
        message to the user\"},\"result_data\":{\"description\":\"The final result
        of the work if relevant/expected\"}}}\n\nYou will receive 1 message containing
        only JSON data according to the inputs JSON schema above\nand you will generate
        a JSON response that is a valid response according to the result JSON schema
        above.\n\nYou will reply with nothing more than the JSON you''ve generated
        so that the calling code\ncan successfully parse your answer.\n"}'
    headers:
      Content-Type:
      - application/json
      X-Api-Key:
      - "<SCRUBBED_ANTHROPIC_API_KEY>"
      Anthropic-Version:
      - '2023-06-01'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 30 May 2025 22:04:57 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Anthropic-Ratelimit-Input-Tokens-Limit:
      - '40000'
      Anthropic-Ratelimit-Input-Tokens-Remaining:
      - '40000'
      Anthropic-Ratelimit-Input-Tokens-Reset:
      - '2025-05-30T22:04:55Z'
      Anthropic-Ratelimit-Output-Tokens-Limit:
      - '16000'
      Anthropic-Ratelimit-Output-Tokens-Remaining:
      - '16000'
      Anthropic-Ratelimit-Output-Tokens-Reset:
      - '2025-05-30T22:04:56Z'
      Anthropic-Ratelimit-Requests-Limit:
      - '1000'
      Anthropic-Ratelimit-Requests-Remaining:
      - '999'
      Anthropic-Ratelimit-Requests-Reset:
      - '2025-05-30T22:04:53Z'
      Anthropic-Ratelimit-Tokens-Limit:
      - '56000'
      Anthropic-Ratelimit-Tokens-Remaining:
      - '56000'
      Anthropic-Ratelimit-Tokens-Reset:
      - '2025-05-30T22:04:55Z'
      Request-Id:
      - req_011CPeUN93uXxVAY9dNReqXj
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Anthropic-Organization-Id:
      - 7a8e3751-3b70-4f90-a3ce-07f57c9d0bfc
      Via:
      - 1.1 google
      Cf-Cache-Status:
      - DYNAMIC
      X-Robots-Tag:
      - none
      Server:
      - cloudflare
      Cf-Ray:
      - 9481879f7e1e9e62-SJC
    body:
      encoding: ASCII-8BIT
      string: '{"id":"msg_01Sh7pW6sS6cne1KRaBNrzAL","type":"message","role":"assistant","model":"claude-3-7-sonnet-20250219","content":[{"type":"text","text":"{\"message_to_user\":\"I
        found and fixed the capybara record with the incorrect year of birth. Barbara
        (ID: 2) had a year of birth listed as ''19'', which is clearly incorrect.
        I updated it to 2019, which is a more reasonable year for a capybara''s birth.
        The record has been successfully updated in the system.\",\"result_data\":{\"fixed_capybara\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}}}"}],"stop_reason":"end_turn","stop_sequence":null,"usage":{"input_tokens":1610,"cache_creation_input_tokens":0,"cache_read_input_tokens":0,"output_tokens":111,"service_tier":"standard"}}'
  recorded_at: Fri, 30 May 2025 22:04:57 GMT
- request:
    method: post
    uri: https://api.anthropic.com/v1/messages
    body:
      encoding: UTF-8
      string: '{"model":"claude-3-7-sonnet-20250219","max_tokens":1024,"messages":[{"role":"user","content":"{\"goal\":\"Thank
        you so much! Can you set it back so that I can do the demo over again? Thanks!\",\"context\":{\"command_log\":[{\"command_name\":\"Foobara::Agent::ListCommands\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":{\"user_provided_commands\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\"],\"agent_specific_commands\":[\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}}},{\"command_name\":\"Capybaras::FindAllCapybaras\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":[{\"name\":\"Fumiko\",\"year_of_birth\":2020,\"id\":1},{\"name\":\"Barbara\",\"year_of_birth\":19,\"id\":2},{\"name\":\"Basil\",\"year_of_birth\":2021,\"id\":3}]}},{\"command_name\":\"Foobara::Agent::DetermineNextCommandNameAndInputs\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\",\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]},\"outcome\":{\"success\":false,\"result\":{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"capybara\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}}},\"errors_hash\":{\"data.unexpected_attributes\":{\"key\":\"data.unexpected_attributes\",\"path\":[],\"runtime_path\":[],\"category\":\"data\",\"symbol\":\"unexpected_attributes\",\"message\":\"Unexpected
        attributes [:capybara]. Expected only [:id, :name, :year_of_birth]\",\"context\":{\"unexpected_attributes\":[\"capybara\"],\"allowed_attributes\":[\"id\",\"name\",\"year_of_birth\"]},\"is_fatal\":true}}}},{\"command_name\":\"Foobara::Agent::Anonacf6::DetermineInputsForNextUpdateCapybaraCommand\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\"},\"outcome\":{\"success\":true,\"result\":{\"id\":2,\"name\":\"Barbara\",\"year_of_birth\":2019}}},{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"name\":\"Barbara\",\"year_of_birth\":2019},\"outcome\":{\"success\":true,\"result\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}}},{\"command_name\":\"Foobara::Agent::DetermineNextCommandNameAndInputs\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\",\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]},\"outcome\":{\"success\":false,\"result\":{\"command_name\":\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\",\"inputs\":null},\"errors_hash\":{\"data.cannot_cast\":{\"key\":\"data.cannot_cast\",\"path\":[],\"runtime_path\":[],\"category\":\"data\",\"symbol\":\"cannot_cast\",\"message\":\"Cannot
        cast nil to an attributes. Expected it to be a an array of pairs, or be a
        hash with symbolizable keys\",\"context\":{\"cast_to\":{\"type\":\"attributes\",\"element_type_declarations\":{\"message_to_user\":{\"description\":\"Optional
        message to the user\",\"type\":\"string\"},\"result_data\":{\"description\":\"The
        final result of the work if relevant/expected\",\"type\":\"duck\"}}},\"value\":null},\"is_fatal\":true}}}},{\"command_name\":\"Foobara::Agent::Anonacf6::DetermineInputsForNextNotifyUserThatCurrentGoalHasBeenAccomplishedCommand\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\"},\"outcome\":{\"success\":true,\"result\":{\"message_to_user\":\"I
        found and fixed the capybara record with the incorrect year of birth. Barbara
        (ID: 2) had a year of birth listed as ''19'', which is clearly incorrect.
        I updated it to 2019, which is a more reasonable year for a capybara''s birth.
        The record has been successfully updated in the system.\",\"result_data\":{\"fixed_capybara\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}}}}},{\"command_name\":\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\",\"inputs\":{\"message_to_user\":\"I
        found and fixed the capybara record with the incorrect year of birth. Barbara
        (ID: 2) had a year of birth listed as ''19'', which is clearly incorrect.
        I updated it to 2019, which is a more reasonable year for a capybara''s birth.
        The record has been successfully updated in the system.\",\"result_data\":{\"fixed_capybara\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}}},\"outcome\":{\"success\":true,\"result\":{\"message_to_user\":\"I
        found and fixed the capybara record with the incorrect year of birth. Barbara
        (ID: 2) had a year of birth listed as ''19'', which is clearly incorrect.
        I updated it to 2019, which is a more reasonable year for a capybara''s birth.
        The record has been successfully updated in the system.\"}}}]},\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}"}],"system":"You
        are implementing an API for a command named Foobara::Agent::DetermineNextCommandNameAndInputs
        which has the following description:\n\nAccepts the current goal, which might
        already be accomplished, and context of the work  so far and returns the inputs
        for the next command to run to make progress towards accomplishing the goal.
        If the goal has already been accomplished then choose the NotifyUserThatCurrentGoalHasBeenAccomplished
        command.  \n\nHere is the inputs JSON schema for the data you will receive:\n\n{\"type\":\"object\",\"required\":[\"command_class_names\",\"context\",\"goal\"],\"properties\":{\"goal\":{\"type\":\"string\",\"description\":\"The
        current goal to accomplish. If the goal has already been accomplished by the
        previous command runs then choose NotifyUserThatCurrentGoalHasBeenAccomplished
        to stop the loop.\"},\"context\":{\"type\":\"object\",\"properties\":{\"command_log\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"command_name\",\"outcome\"],\"properties\":{\"command_name\":{\"type\":\"string\",\"description\":\"Name
        of the command that was run\"},\"inputs\":{\"type\":[\"object\",\"null\"],\"description\":\"Inputs
        to the command\"},\"outcome\":{\"type\":\"object\",\"required\":[\"success\"],\"properties\":{\"success\":{\"type\":\"boolean\",\"description\":\"Whether
        the command succeeded or not\"},\"result\":{\"description\":\"Result of the
        command\"},\"errors_hash\":{\"description\":\"Errors that occurred during
        the command\"}}}}},\"description\":\"Log of all commands run so far and their
        outcomes\"}},\"description\":\"Context of the progress towards the goal so
        far\"},\"command_class_names\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}}}\n\nHere
        is the result JSON schema:\n\n{\"type\":\"object\",\"required\":[\"command_name\"],\"properties\":{\"command_name\":{\"type\":\"string\"},\"inputs\":{\"type\":[\"object\",\"null\"]}}}\n\nYou
        will receive 1 message containing only JSON data according to the inputs JSON
        schema above\nand you will generate a JSON response that is a valid response
        according to the result JSON schema above.\n\nYou will reply with nothing
        more than the JSON you''ve generated so that the calling code\ncan successfully
        parse your answer.\n"}'
    headers:
      Content-Type:
      - application/json
      X-Api-Key:
      - "<SCRUBBED_ANTHROPIC_API_KEY>"
      Anthropic-Version:
      - '2023-06-01'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 30 May 2025 22:05:02 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Anthropic-Ratelimit-Input-Tokens-Limit:
      - '40000'
      Anthropic-Ratelimit-Input-Tokens-Remaining:
      - '40000'
      Anthropic-Ratelimit-Input-Tokens-Reset:
      - '2025-05-30T22:05:02Z'
      Anthropic-Ratelimit-Output-Tokens-Limit:
      - '16000'
      Anthropic-Ratelimit-Output-Tokens-Remaining:
      - '16000'
      Anthropic-Ratelimit-Output-Tokens-Reset:
      - '2025-05-30T22:05:02Z'
      Anthropic-Ratelimit-Requests-Limit:
      - '1000'
      Anthropic-Ratelimit-Requests-Remaining:
      - '999'
      Anthropic-Ratelimit-Requests-Reset:
      - '2025-05-30T22:04:57Z'
      Anthropic-Ratelimit-Tokens-Limit:
      - '56000'
      Anthropic-Ratelimit-Tokens-Remaining:
      - '56000'
      Anthropic-Ratelimit-Tokens-Reset:
      - '2025-05-30T22:05:02Z'
      Request-Id:
      - req_011CPeUNSxBEA2Ehbmo5oCWU
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Anthropic-Organization-Id:
      - 7a8e3751-3b70-4f90-a3ce-07f57c9d0bfc
      Via:
      - 1.1 google
      Cf-Cache-Status:
      - DYNAMIC
      X-Robots-Tag:
      - none
      Server:
      - cloudflare
      Cf-Ray:
      - 948187b9b88a405d-SJC
    body:
      encoding: ASCII-8BIT
      string: '{"id":"msg_01ChnSTSsawxyCuyPU3y7c7n","type":"message","role":"assistant","model":"claude-3-7-sonnet-20250219","content":[{"type":"text","text":"{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"name\":\"Barbara\",\"year_of_birth\":19}}"}],"stop_reason":"end_turn","stop_sequence":null,"usage":{"input_tokens":2206,"cache_creation_input_tokens":0,"cache_read_input_tokens":0,"output_tokens":38,"service_tier":"standard"}}'
  recorded_at: Fri, 30 May 2025 22:05:02 GMT
- request:
    method: post
    uri: https://api.anthropic.com/v1/messages
    body:
      encoding: UTF-8
      string: '{"model":"claude-3-7-sonnet-20250219","max_tokens":1024,"messages":[{"role":"user","content":"{\"goal\":\"Thank
        you so much! Can you set it back so that I can do the demo over again? Thanks!\",\"context\":{\"command_log\":[{\"command_name\":\"Foobara::Agent::ListCommands\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":{\"user_provided_commands\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\"],\"agent_specific_commands\":[\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}}},{\"command_name\":\"Capybaras::FindAllCapybaras\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":[{\"name\":\"Fumiko\",\"year_of_birth\":2020,\"id\":1},{\"name\":\"Barbara\",\"year_of_birth\":19,\"id\":2},{\"name\":\"Basil\",\"year_of_birth\":2021,\"id\":3}]}},{\"command_name\":\"Foobara::Agent::DetermineNextCommandNameAndInputs\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\",\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]},\"outcome\":{\"success\":false,\"result\":{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"capybara\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}}},\"errors_hash\":{\"data.unexpected_attributes\":{\"key\":\"data.unexpected_attributes\",\"path\":[],\"runtime_path\":[],\"category\":\"data\",\"symbol\":\"unexpected_attributes\",\"message\":\"Unexpected
        attributes [:capybara]. Expected only [:id, :name, :year_of_birth]\",\"context\":{\"unexpected_attributes\":[\"capybara\"],\"allowed_attributes\":[\"id\",\"name\",\"year_of_birth\"]},\"is_fatal\":true}}}},{\"command_name\":\"Foobara::Agent::Anonacf6::DetermineInputsForNextUpdateCapybaraCommand\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\"},\"outcome\":{\"success\":true,\"result\":{\"id\":2,\"name\":\"Barbara\",\"year_of_birth\":2019}}},{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"name\":\"Barbara\",\"year_of_birth\":2019},\"outcome\":{\"success\":true,\"result\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}}},{\"command_name\":\"Foobara::Agent::DetermineNextCommandNameAndInputs\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\",\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]},\"outcome\":{\"success\":false,\"result\":{\"command_name\":\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\",\"inputs\":null},\"errors_hash\":{\"data.cannot_cast\":{\"key\":\"data.cannot_cast\",\"path\":[],\"runtime_path\":[],\"category\":\"data\",\"symbol\":\"cannot_cast\",\"message\":\"Cannot
        cast nil to an attributes. Expected it to be a an array of pairs, or be a
        hash with symbolizable keys\",\"context\":{\"cast_to\":{\"type\":\"attributes\",\"element_type_declarations\":{\"message_to_user\":{\"description\":\"Optional
        message to the user\",\"type\":\"string\"},\"result_data\":{\"description\":\"The
        final result of the work if relevant/expected\",\"type\":\"duck\"}}},\"value\":null},\"is_fatal\":true}}}},{\"command_name\":\"Foobara::Agent::Anonacf6::DetermineInputsForNextNotifyUserThatCurrentGoalHasBeenAccomplishedCommand\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\"},\"outcome\":{\"success\":true,\"result\":{\"message_to_user\":\"I
        found and fixed the capybara record with the incorrect year of birth. Barbara
        (ID: 2) had a year of birth listed as ''19'', which is clearly incorrect.
        I updated it to 2019, which is a more reasonable year for a capybara''s birth.
        The record has been successfully updated in the system.\",\"result_data\":{\"fixed_capybara\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}}}}},{\"command_name\":\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\",\"inputs\":{\"message_to_user\":\"I
        found and fixed the capybara record with the incorrect year of birth. Barbara
        (ID: 2) had a year of birth listed as ''19'', which is clearly incorrect.
        I updated it to 2019, which is a more reasonable year for a capybara''s birth.
        The record has been successfully updated in the system.\",\"result_data\":{\"fixed_capybara\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}}},\"outcome\":{\"success\":true,\"result\":{\"message_to_user\":\"I
        found and fixed the capybara record with the incorrect year of birth. Barbara
        (ID: 2) had a year of birth listed as ''19'', which is clearly incorrect.
        I updated it to 2019, which is a more reasonable year for a capybara''s birth.
        The record has been successfully updated in the system.\"}}},{\"command_name\":\"Foobara::Agent::DetermineNextCommandNameAndInputs\",\"inputs\":{\"goal\":\"Thank
        you so much! Can you set it back so that I can do the demo over again? Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\",\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]},\"outcome\":{\"success\":true,\"result\":{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"name\":\"Barbara\",\"year_of_birth\":19}}}},{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"name\":\"Barbara\",\"year_of_birth\":19},\"outcome\":{\"success\":true,\"result\":{\"name\":\"Barbara\",\"year_of_birth\":19,\"id\":2}}}]},\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}"}],"system":"You
        are implementing an API for a command named Foobara::Agent::DetermineNextCommandNameAndInputs
        which has the following description:\n\nAccepts the current goal, which might
        already be accomplished, and context of the work  so far and returns the inputs
        for the next command to run to make progress towards accomplishing the goal.
        If the goal has already been accomplished then choose the NotifyUserThatCurrentGoalHasBeenAccomplished
        command.  \n\nHere is the inputs JSON schema for the data you will receive:\n\n{\"type\":\"object\",\"required\":[\"command_class_names\",\"context\",\"goal\"],\"properties\":{\"goal\":{\"type\":\"string\",\"description\":\"The
        current goal to accomplish. If the goal has already been accomplished by the
        previous command runs then choose NotifyUserThatCurrentGoalHasBeenAccomplished
        to stop the loop.\"},\"context\":{\"type\":\"object\",\"properties\":{\"command_log\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"command_name\",\"outcome\"],\"properties\":{\"command_name\":{\"type\":\"string\",\"description\":\"Name
        of the command that was run\"},\"inputs\":{\"type\":[\"object\",\"null\"],\"description\":\"Inputs
        to the command\"},\"outcome\":{\"type\":\"object\",\"required\":[\"success\"],\"properties\":{\"success\":{\"type\":\"boolean\",\"description\":\"Whether
        the command succeeded or not\"},\"result\":{\"description\":\"Result of the
        command\"},\"errors_hash\":{\"description\":\"Errors that occurred during
        the command\"}}}}},\"description\":\"Log of all commands run so far and their
        outcomes\"}},\"description\":\"Context of the progress towards the goal so
        far\"},\"command_class_names\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}}}\n\nHere
        is the result JSON schema:\n\n{\"type\":\"object\",\"required\":[\"command_name\"],\"properties\":{\"command_name\":{\"type\":\"string\"},\"inputs\":{\"type\":[\"object\",\"null\"]}}}\n\nYou
        will receive 1 message containing only JSON data according to the inputs JSON
        schema above\nand you will generate a JSON response that is a valid response
        according to the result JSON schema above.\n\nYou will reply with nothing
        more than the JSON you''ve generated so that the calling code\ncan successfully
        parse your answer.\n"}'
    headers:
      Content-Type:
      - application/json
      X-Api-Key:
      - "<SCRUBBED_ANTHROPIC_API_KEY>"
      Anthropic-Version:
      - '2023-06-01'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 30 May 2025 22:05:09 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Anthropic-Ratelimit-Input-Tokens-Limit:
      - '40000'
      Anthropic-Ratelimit-Input-Tokens-Remaining:
      - '40000'
      Anthropic-Ratelimit-Input-Tokens-Reset:
      - '2025-05-30T22:05:09Z'
      Anthropic-Ratelimit-Output-Tokens-Limit:
      - '16000'
      Anthropic-Ratelimit-Output-Tokens-Remaining:
      - '16000'
      Anthropic-Ratelimit-Output-Tokens-Reset:
      - '2025-05-30T22:05:09Z'
      Anthropic-Ratelimit-Requests-Limit:
      - '1000'
      Anthropic-Ratelimit-Requests-Remaining:
      - '999'
      Anthropic-Ratelimit-Requests-Reset:
      - '2025-05-30T22:05:03Z'
      Anthropic-Ratelimit-Tokens-Limit:
      - '56000'
      Anthropic-Ratelimit-Tokens-Remaining:
      - '56000'
      Anthropic-Ratelimit-Tokens-Reset:
      - '2025-05-30T22:05:09Z'
      Request-Id:
      - req_011CPeUNsWYc45h3UasBM17Q
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Anthropic-Organization-Id:
      - 7a8e3751-3b70-4f90-a3ce-07f57c9d0bfc
      Via:
      - 1.1 google
      Cf-Cache-Status:
      - DYNAMIC
      X-Robots-Tag:
      - none
      Server:
      - cloudflare
      Cf-Ray:
      - 948187ddaef7cea0-SJC
    body:
      encoding: ASCII-8BIT
      string: '{"id":"msg_011TWURNQhsyvRHZrgSuYmPa","type":"message","role":"assistant","model":"claude-3-7-sonnet-20250219","content":[{"type":"text","text":"{\"command_name\":\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\",\"inputs\":{\"message_to_user\":\"I''ve
        successfully reset Barbara''s year of birth back to 19, so you can run the
        demo again. The system is now in its original state with the incorrect data.\"}}"}],"stop_reason":"end_turn","stop_sequence":null,"usage":{"input_tokens":2495,"cache_creation_input_tokens":0,"cache_read_input_tokens":0,"output_tokens":76,"service_tier":"standard"}}'
  recorded_at: Fri, 30 May 2025 22:05:10 GMT
- request:
    method: post
    uri: https://api.anthropic.com/v1/messages
    body:
      encoding: UTF-8
      string: '{"model":"claude-3-7-sonnet-20250219","max_tokens":1024,"messages":[{"role":"user","content":"{\"goal\":\"Thank
        you so much! Can you set it back so that I can do the demo over again? Thanks!\",\"context\":{\"command_log\":[{\"command_name\":\"Foobara::Agent::ListCommands\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":{\"user_provided_commands\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\"],\"agent_specific_commands\":[\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}}},{\"command_name\":\"Capybaras::FindAllCapybaras\",\"inputs\":{},\"outcome\":{\"success\":true,\"result\":[{\"name\":\"Fumiko\",\"year_of_birth\":2020,\"id\":1},{\"name\":\"Barbara\",\"year_of_birth\":19,\"id\":2},{\"name\":\"Basil\",\"year_of_birth\":2021,\"id\":3}]}},{\"command_name\":\"Foobara::Agent::DetermineNextCommandNameAndInputs\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\",\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]},\"outcome\":{\"success\":false,\"result\":{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"capybara\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}}},\"errors_hash\":{\"data.unexpected_attributes\":{\"key\":\"data.unexpected_attributes\",\"path\":[],\"runtime_path\":[],\"category\":\"data\",\"symbol\":\"unexpected_attributes\",\"message\":\"Unexpected
        attributes [:capybara]. Expected only [:id, :name, :year_of_birth]\",\"context\":{\"unexpected_attributes\":[\"capybara\"],\"allowed_attributes\":[\"id\",\"name\",\"year_of_birth\"]},\"is_fatal\":true}}}},{\"command_name\":\"Foobara::Agent::Anonacf6::DetermineInputsForNextUpdateCapybaraCommand\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\"},\"outcome\":{\"success\":true,\"result\":{\"id\":2,\"name\":\"Barbara\",\"year_of_birth\":2019}}},{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"name\":\"Barbara\",\"year_of_birth\":2019},\"outcome\":{\"success\":true,\"result\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}}},{\"command_name\":\"Foobara::Agent::DetermineNextCommandNameAndInputs\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\",\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]},\"outcome\":{\"success\":false,\"result\":{\"command_name\":\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\",\"inputs\":null},\"errors_hash\":{\"data.cannot_cast\":{\"key\":\"data.cannot_cast\",\"path\":[],\"runtime_path\":[],\"category\":\"data\",\"symbol\":\"cannot_cast\",\"message\":\"Cannot
        cast nil to an attributes. Expected it to be a an array of pairs, or be a
        hash with symbolizable keys\",\"context\":{\"cast_to\":{\"type\":\"attributes\",\"element_type_declarations\":{\"message_to_user\":{\"description\":\"Optional
        message to the user\",\"type\":\"string\"},\"result_data\":{\"description\":\"The
        final result of the work if relevant/expected\",\"type\":\"duck\"}}},\"value\":null},\"is_fatal\":true}}}},{\"command_name\":\"Foobara::Agent::Anonacf6::DetermineInputsForNextNotifyUserThatCurrentGoalHasBeenAccomplishedCommand\",\"inputs\":{\"goal\":\"There
        is a capybara with a bad year of birth. Can you find and fix the bad record?
        Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\"},\"outcome\":{\"success\":true,\"result\":{\"message_to_user\":\"I
        found and fixed the capybara record with the incorrect year of birth. Barbara
        (ID: 2) had a year of birth listed as ''19'', which is clearly incorrect.
        I updated it to 2019, which is a more reasonable year for a capybara''s birth.
        The record has been successfully updated in the system.\",\"result_data\":{\"fixed_capybara\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}}}}},{\"command_name\":\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\",\"inputs\":{\"message_to_user\":\"I
        found and fixed the capybara record with the incorrect year of birth. Barbara
        (ID: 2) had a year of birth listed as ''19'', which is clearly incorrect.
        I updated it to 2019, which is a more reasonable year for a capybara''s birth.
        The record has been successfully updated in the system.\",\"result_data\":{\"fixed_capybara\":{\"name\":\"Barbara\",\"year_of_birth\":2019,\"id\":2}}},\"outcome\":{\"success\":true,\"result\":{\"message_to_user\":\"I
        found and fixed the capybara record with the incorrect year of birth. Barbara
        (ID: 2) had a year of birth listed as ''19'', which is clearly incorrect.
        I updated it to 2019, which is a more reasonable year for a capybara''s birth.
        The record has been successfully updated in the system.\"}}},{\"command_name\":\"Foobara::Agent::DetermineNextCommandNameAndInputs\",\"inputs\":{\"goal\":\"Thank
        you so much! Can you set it back so that I can do the demo over again? Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\",\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]},\"outcome\":{\"success\":true,\"result\":{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"name\":\"Barbara\",\"year_of_birth\":19}}}},{\"command_name\":\"Capybaras::UpdateCapybara\",\"inputs\":{\"id\":2,\"name\":\"Barbara\",\"year_of_birth\":19},\"outcome\":{\"success\":true,\"result\":{\"name\":\"Barbara\",\"year_of_birth\":19,\"id\":2}}},{\"command_name\":\"Foobara::Agent::DetermineNextCommandNameAndInputs\",\"inputs\":{\"goal\":\"Thank
        you so much! Can you set it back so that I can do the demo over again? Thanks!\",\"llm_model\":\"claude-3-7-sonnet-20250219\",\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]},\"outcome\":{\"success\":true,\"result\":{\"command_name\":\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\",\"inputs\":{\"message_to_user\":\"I''ve
        successfully reset Barbara''s year of birth back to 19, so you can run the
        demo again. The system is now in its original state with the incorrect data.\"}}}},{\"command_name\":\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\",\"inputs\":{\"message_to_user\":\"I''ve
        successfully reset Barbara''s year of birth back to 19, so you can run the
        demo again. The system is now in its original state with the incorrect data.\"},\"outcome\":{\"success\":true,\"result\":{\"message_to_user\":\"I''ve
        successfully reset Barbara''s year of birth back to 19, so you can run the
        demo again. The system is now in its original state with the incorrect data.\"}}}]},\"command_class_names\":[\"Capybaras::FindAllCapybaras\",\"Capybaras::UpdateCapybara\",\"Foobara::Agent::DescribeCommand\",\"Foobara::Agent::DescribeType\",\"Foobara::Agent::GiveUp\",\"Foobara::Agent::ListCommands\",\"Foobara::Agent::ListTypes\",\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\"]}"}],"system":"You
        are implementing an API for a command named Foobara::Agent::DetermineNextCommandNameAndInputs
        which has the following description:\n\nAccepts the current goal, which might
        already be accomplished, and context of the work  so far and returns the inputs
        for the next command to run to make progress towards accomplishing the goal.
        If the goal has already been accomplished then choose the NotifyUserThatCurrentGoalHasBeenAccomplished
        command.  \n\nHere is the inputs JSON schema for the data you will receive:\n\n{\"type\":\"object\",\"required\":[\"command_class_names\",\"context\",\"goal\"],\"properties\":{\"goal\":{\"type\":\"string\",\"description\":\"The
        current goal to accomplish. If the goal has already been accomplished by the
        previous command runs then choose NotifyUserThatCurrentGoalHasBeenAccomplished
        to stop the loop.\"},\"context\":{\"type\":\"object\",\"properties\":{\"command_log\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"command_name\",\"outcome\"],\"properties\":{\"command_name\":{\"type\":\"string\",\"description\":\"Name
        of the command that was run\"},\"inputs\":{\"type\":[\"object\",\"null\"],\"description\":\"Inputs
        to the command\"},\"outcome\":{\"type\":\"object\",\"required\":[\"success\"],\"properties\":{\"success\":{\"type\":\"boolean\",\"description\":\"Whether
        the command succeeded or not\"},\"result\":{\"description\":\"Result of the
        command\"},\"errors_hash\":{\"description\":\"Errors that occurred during
        the command\"}}}}},\"description\":\"Log of all commands run so far and their
        outcomes\"}},\"description\":\"Context of the progress towards the goal so
        far\"},\"command_class_names\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}}}\n\nHere
        is the result JSON schema:\n\n{\"type\":\"object\",\"required\":[\"command_name\"],\"properties\":{\"command_name\":{\"type\":\"string\"},\"inputs\":{\"type\":[\"object\",\"null\"]}}}\n\nYou
        will receive 1 message containing only JSON data according to the inputs JSON
        schema above\nand you will generate a JSON response that is a valid response
        according to the result JSON schema above.\n\nYou will reply with nothing
        more than the JSON you''ve generated so that the calling code\ncan successfully
        parse your answer.\n"}'
    headers:
      Content-Type:
      - application/json
      X-Api-Key:
      - "<SCRUBBED_ANTHROPIC_API_KEY>"
      Anthropic-Version:
      - '2023-06-01'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 30 May 2025 22:05:15 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Anthropic-Ratelimit-Input-Tokens-Limit:
      - '40000'
      Anthropic-Ratelimit-Input-Tokens-Remaining:
      - '39000'
      Anthropic-Ratelimit-Input-Tokens-Reset:
      - '2025-05-30T22:05:14Z'
      Anthropic-Ratelimit-Output-Tokens-Limit:
      - '16000'
      Anthropic-Ratelimit-Output-Tokens-Remaining:
      - '16000'
      Anthropic-Ratelimit-Output-Tokens-Reset:
      - '2025-05-30T22:05:15Z'
      Anthropic-Ratelimit-Requests-Limit:
      - '1000'
      Anthropic-Ratelimit-Requests-Remaining:
      - '999'
      Anthropic-Ratelimit-Requests-Reset:
      - '2025-05-30T22:05:10Z'
      Anthropic-Ratelimit-Tokens-Limit:
      - '56000'
      Anthropic-Ratelimit-Tokens-Remaining:
      - '55000'
      Anthropic-Ratelimit-Tokens-Reset:
      - '2025-05-30T22:05:14Z'
      Request-Id:
      - req_011CPeUPQ83jvJVcwZQHKhr9
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Anthropic-Organization-Id:
      - 7a8e3751-3b70-4f90-a3ce-07f57c9d0bfc
      Via:
      - 1.1 google
      Cf-Cache-Status:
      - DYNAMIC
      X-Robots-Tag:
      - none
      Server:
      - cloudflare
      Cf-Ray:
      - 9481880a6b3fcf23-SJC
    body:
      encoding: ASCII-8BIT
      string: '{"id":"msg_013VfSsnj8tfrhRpaGNdJWCM","type":"message","role":"assistant","model":"claude-3-7-sonnet-20250219","content":[{"type":"text","text":"{\"command_name\":\"Foobara::Agent::NotifyUserThatCurrentGoalHasBeenAccomplished\",\"inputs\":{\"message_to_user\":\"I''ve
        already reset Barbara''s year of birth back to 19, so you can now run the
        demo again. The system is ready for your demonstration.\"}}"}],"stop_reason":"end_turn","stop_sequence":null,"usage":{"input_tokens":2886,"cache_creation_input_tokens":0,"cache_read_input_tokens":0,"output_tokens":72,"service_tier":"standard"}}'
  recorded_at: Fri, 30 May 2025 22:05:15 GMT
recorded_with: VCR 6.3.1
